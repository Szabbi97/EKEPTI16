<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2011 rel. 3 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="osdm_ae" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 sps xbrldi xbrli xlink xs xsd xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-146917824-even" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-146917824-odd" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-146917824-even-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-146917824-odd-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-146917824-even-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-146917824-odd-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-146917824">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-146917824-even-first" odd-or-even="even" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-146917824-odd-first" odd-or-even="odd" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-146917824-even-last" odd-or-even="even" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-146917824-odd-last" odd-or-even="odd" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-146917824-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-146917824-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
			<fo:simple-page-master master-name="page-master-156482240-even" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-156482240-odd" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-156482240-even-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-156482240-odd-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-156482240-even-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-156482240-odd-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.7cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-156482240">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-156482240-even-first" odd-or-even="even" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-156482240-odd-first" odd-or-even="odd" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-156482240-even-last" odd-or-even="even" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-156482240-odd-last" odd-or-even="odd" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-156482240-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-156482240-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2011 rel. 3 sp1 (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:bookmark-tree>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:root">
						<xsl:for-each select="n1:EntitiesCollection">
							<xsl:for-each select="n1:EntityDetails">
								<xsl:for-each select="n1:EntityName">
									<fo:bookmark>
										<xsl:choose>
											<xsl:when test="starts-with(string(concat(&apos;#&apos;,.)),'#')">
												<xsl:attribute name="internal-destination">
													<xsl:value-of select="substring(string(concat(&apos;#&apos;,.)),2)"/>
												</xsl:attribute>
											</xsl:when>
											<xsl:otherwise>
												<xsl:message terminate="yes">
													<xsl:value-of select="concat('Error: External bookmark destinations (',string(concat(&apos;#&apos;,.)),') are not supported by FOP 0.93/1.0!')"/>
												</xsl:message>
												<xsl:attribute name="external-destination">
													<xsl:value-of select="string(concat(&apos;#&apos;,.))"/>
												</xsl:attribute>
											</xsl:otherwise>
										</xsl:choose>
										<fo:bookmark-title>
											<xsl:variable name="altova:bookmark-title">
												<xsl:variable name="value-of-template_092891D0">
													<xsl:apply-templates/>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="contains(string($value-of-template_092891D0),'&#x200B;')">
														<fo:block font-size="xx-small">
															<xsl:copy-of select="$value-of-template_092891D0"/>
														</fo:block>
													</xsl:when>
													<xsl:otherwise>
														<fo:inline font-size="xx-small">
															<xsl:copy-of select="$value-of-template_092891D0"/>
														</fo:inline>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:variable>
											<xsl:value-of select="string($altova:bookmark-title)"/>
										</fo:bookmark-title>
									</fo:bookmark>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</fo:bookmark-tree>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-146917824" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-footer">
					<fo:block-container height="1.30cm" overflow="hidden" display-align="after">
						<fo:block font-family="Tahoma" font-size="xx-small">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table font-size="xx-small" width="25cm" table-layout="fixed" border-spacing="0">
								<fo:table-column column-width="18cm"/>
								<fo:table-column column-width="7cm"/>
								<xsl:variable name="altova:CurrContextGrid_0981AC18" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="left">
													<fo:inline>
														<xsl:text>Oracle Data Modeler</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="right">
													<fo:inline>
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number/>
													<fo:inline>
														<xsl:text> / </xsl:text>
													</fo:inline>
													<fo:page-number-citation ref-id="SV_RefID_PageTotal"/>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer">
					<fo:block-container height="1.30cm" overflow="hidden" display-align="after">
						<fo:block font-family="Tahoma" font-size="xx-small">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table font-size="xx-small" width="25cm" table-layout="fixed" border-spacing="0">
								<fo:table-column column-width="18cm"/>
								<fo:table-column column-width="7cm"/>
								<xsl:variable name="altova:CurrContextGrid_0981AC18" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="left">
													<fo:inline>
														<xsl:text>Oracle Data Modeler</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="right">
													<fo:inline>
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number/>
													<fo:inline>
														<xsl:text> / </xsl:text>
													</fo:inline>
													<fo:page-number-citation ref-id="SV_RefID_PageTotal"/>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block font-family="Tahoma" font-size="xx-small" empty-cells="show" text-align="left" display-align="before">
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x200B;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:block text-align="center" space-before="0" space-after="0" margin="0pt">
							<fo:inline font-size="medium" font-weight="bold">
								<xsl:text>All Entities Details</xsl:text>
							</fo:inline>
						</fo:block>
						<fo:block>
							<fo:leader leader-pattern="space"/>
						</fo:block>
						<xsl:for-each select="$XML">
							<xsl:for-each select="n1:root">
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table width="20cm" table-layout="fixed" border-spacing="0">
									<fo:table-column column-width="4cm"/>
									<fo:table-column column-width="16cm"/>
									<xsl:variable name="altova:CurrContextGrid_0979F0E0" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Design Name</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_0843BBF8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0843BBF8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0843BBF8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0843BBF8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="string-length(n1:DesignName) &gt; 0">
																		<xsl:for-each select="n1:DesignName">
																			<xsl:variable name="value-of-template_0969C620">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0969C620),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0969C620"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0969C620"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_0969CBE8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0969CBE8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0969CBE8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0969CBE8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_09516AB8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_09516AB8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_09516AB8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_09516AB8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_09516EA8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_09516EA8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_09516EA8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_09516EA8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Version Date</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_09517A08">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_09517A08),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_09517A08"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_09517A08"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="string-length(n1:VersionDate) &gt; 0">
																		<xsl:for-each select="n1:VersionDate">
																			<xsl:variable name="value-of-template_09517F68">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_09517F68),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_09517F68"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_09517F68"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_08408378">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_08408378),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_08408378"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_08408378"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_08408768">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_08408768),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_08408768"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_08408768"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_08408B58">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_08408B58),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_08408B58"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_08408B58"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Version Comment</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:VersionComment">
																	<xsl:for-each select="n1:VersionCommentDetails">
																		<xsl:for-each select="n1:VersionCommentRow">
																			<xsl:variable name="value-of-template_0967B398">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0967B398),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0967B398"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0967B398"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
																		<xsl:for-each select="n1:VersionComment">
																			<xsl:for-each select="n1:VersionCommentDetails">
																				<xsl:for-each select="n1:VersionCommentRow">
																					<xsl:variable name="value-of-template_0967BBC8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0967BBC8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0967BBC8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0967BBC8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																					<fo:block/>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:choose>
																	<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
																		<xsl:for-each select="n1:VersionComment">
																			<xsl:for-each select="n1:VersionCommentDetails">
																				<xsl:for-each select="n1:VersionCommentRow">
																					<xsl:variable name="value-of-template_0967C628">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0967C628),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0967C628"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0967C628"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																					<fo:block/>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise/>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:VersionComment">
																	<xsl:for-each select="n1:VersionCommentDetails">
																		<xsl:for-each select="n1:VersionCommentRow">
																			<xsl:variable name="value-of-template_083E31E8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_083E31E8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_083E31E8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_083E31E8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:VersionComment">
																	<xsl:for-each select="n1:VersionCommentDetails">
																		<xsl:for-each select="n1:VersionCommentRow">
																			<xsl:variable name="value-of-template_083E38A8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_083E38A8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_083E38A8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_083E38A8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Model Name</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_0953A3D8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0953A3D8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0953A3D8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0953A3D8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="string-length(n1:ModelName) &gt; 0">
																		<xsl:for-each select="n1:ModelName">
																			<xsl:variable name="value-of-template_0953A878">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0953A878),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0953A878"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0953A878"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_0953AE40">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0953AE40),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0953AE40"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0953AE40"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_0953B230">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0953B230),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0953B230"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0953B230"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_0953B620">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0953B620),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0953B620"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0953B620"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<xsl:for-each select="n1:EntitiesCollection">
									<xsl:for-each select="n1:EntityDetails">
										<fo:block break-after="page">
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table width="25cm" table-layout="fixed" border-spacing="0">
											<fo:table-column column-width="15cm"/>
											<fo:table-column column-width="1cm"/>
											<fo:table-column column-width="8cm"/>
											<xsl:variable name="altova:CurrContextGrid_0951F4D8" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell padding="0" display-align="center">
															<fo:block text-align="left">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x200B;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:table width="15cm" table-layout="fixed" border-spacing="0">
																	<fo:table-column column-width="4cm"/>
																	<fo:table-column column-width="11cm"/>
																	<xsl:variable name="altova:CurrContextGrid_0951FB60" select="."/>
																	<fo:table-body start-indent="0pt">
																		<xsl:variable name="altova:tablerows">
																			<fo:table-row>
																				<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<fo:inline>
																							<xsl:text>Entity Name</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell background-color="#a5e7ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x200B;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<fo:block font-size="2em" font-weight="bold" space-before="0.67em" space-after="0.67em" margin="0pt">
																							<fo:block>
																								<xsl:attribute name="id">
																									<xsl:value-of select="n1:EntityName"/>
																								</xsl:attribute>
																								<xsl:choose>
																									<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																										<xsl:for-each select="n1:EntityName">
																											<xsl:variable name="value-of-template_08646E98">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_08646E98),'&#x200B;')">
																													<fo:block font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_08646E98"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_08646E98"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																										<xsl:choose>
																											<xsl:when test="string-length(n1:EntityName) &gt; 0">
																												<xsl:for-each select="n1:EntityName">
																													<xsl:variable name="value-of-template_08647428">
																														<xsl:apply-templates/>
																													</xsl:variable>
																													<xsl:choose>
																														<xsl:when test="contains(string($value-of-template_08647428),'&#x200B;')">
																															<fo:block font-size="xx-small">
																																<xsl:copy-of select="$value-of-template_08647428"/>
																															</fo:block>
																														</xsl:when>
																														<xsl:otherwise>
																															<fo:inline font-size="xx-small">
																																<xsl:copy-of select="$value-of-template_08647428"/>
																															</fo:inline>
																														</xsl:otherwise>
																													</xsl:choose>
																												</xsl:for-each>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:text>&#160;</xsl:text>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:when>
																									<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																										<xsl:for-each select="n1:EntityName">
																											<xsl:variable name="value-of-template_09513718">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_09513718),'&#x200B;')">
																													<fo:block font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_09513718"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_09513718"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																										<xsl:for-each select="n1:EntityName">
																											<xsl:variable name="value-of-template_09513B38">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_09513B38),'&#x200B;')">
																													<fo:block font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_09513B38"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_09513B38"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																										<xsl:for-each select="n1:EntityName">
																											<xsl:variable name="value-of-template_09513F58">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_09513F58),'&#x200B;')">
																													<fo:block font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_09513F58"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline font-size="xx-small">
																														<xsl:copy-of select="$value-of-template_09513F58"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																								</xsl:choose>
																							</fo:block>
																						</fo:block>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<fo:inline>
																							<xsl:text>Preferred Abbreviation</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<xsl:choose>
																							<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																								<xsl:for-each select="n1:Abbreviation">
																									<xsl:variable name="value-of-template_083E6830">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083E6830),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083E6830"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083E6830"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																								<xsl:choose>
																									<xsl:when test="string-length(n1:Abbreviation) &gt; 0">
																										<xsl:for-each select="n1:Abbreviation">
																											<xsl:variable name="value-of-template_083E6D90">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_083E6D90),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_083E6D90"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_083E6D90"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:text>&#160;</xsl:text>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																								<xsl:for-each select="n1:Abbreviation">
																									<xsl:variable name="value-of-template_083E7358">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083E7358),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083E7358"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083E7358"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																								<xsl:for-each select="n1:Abbreviation">
																									<xsl:variable name="value-of-template_083E7748">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083E7748),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083E7748"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083E7748"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																								<xsl:for-each select="n1:Abbreviation">
																									<xsl:variable name="value-of-template_083E7B38">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083E7B38),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083E7B38"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083E7B38"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<fo:inline>
																							<xsl:text>Classification Type Name</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<xsl:choose>
																							<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																								<xsl:for-each select="n1:ClassificationTypeName">
																									<xsl:variable name="value-of-template_086286F0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086286F0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086286F0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086286F0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																								<xsl:choose>
																									<xsl:when test="string-length(n1:ClassificationTypeName) &gt; 0">
																										<xsl:for-each select="n1:ClassificationTypeName">
																											<xsl:variable name="value-of-template_08628C50">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_08628C50),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_08628C50"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_08628C50"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:text>&#160;</xsl:text>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																								<xsl:for-each select="n1:ClassificationTypeName">
																									<xsl:variable name="value-of-template_08629230">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08629230),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08629230"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08629230"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																								<xsl:for-each select="n1:ClassificationTypeName">
																									<xsl:variable name="value-of-template_08629620">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08629620),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08629620"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08629620"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																								<xsl:for-each select="n1:ClassificationTypeName">
																									<xsl:variable name="value-of-template_094809A8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_094809A8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_094809A8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_094809A8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<fo:inline>
																							<xsl:text>Object Type Name</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<xsl:choose>
																							<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																								<xsl:for-each select="n1:ObjectTypeName">
																									<xsl:variable name="value-of-template_09481508">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09481508),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09481508"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09481508"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																								<xsl:choose>
																									<xsl:when test="string-length(n1:ObjectTypeName) &gt; 0">
																										<xsl:for-each select="n1:ObjectTypeName">
																											<xsl:variable name="value-of-template_09481A68">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_09481A68),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_09481A68"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_09481A68"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:text>&#160;</xsl:text>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																								<xsl:for-each select="n1:ObjectTypeName">
																									<xsl:variable name="value-of-template_09408B00">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09408B00),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09408B00"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09408B00"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																								<xsl:for-each select="n1:ObjectTypeName">
																									<xsl:variable name="value-of-template_09408EC0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09408EC0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09408EC0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09408EC0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																								<xsl:for-each select="n1:ObjectTypeName">
																									<xsl:variable name="value-of-template_094092B0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_094092B0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_094092B0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_094092B0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<fo:inline>
																							<xsl:text>Super Type</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<xsl:choose>
																							<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																								<xsl:for-each select="n1:SuperType">
																									<xsl:variable name="value-of-template_09409E70">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09409E70),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09409E70"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09409E70"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																								<xsl:choose>
																									<xsl:when test="string-length(n1:SuperType) &gt; 0">
																										<xsl:for-each select="n1:SuperType">
																											<xsl:variable name="value-of-template_083F1608">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_083F1608),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_083F1608"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_083F1608"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:text>&#160;</xsl:text>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																								<xsl:for-each select="n1:SuperType">
																									<xsl:variable name="value-of-template_083F1BD0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083F1BD0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083F1BD0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083F1BD0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																								<xsl:for-each select="n1:SuperType">
																									<xsl:variable name="value-of-template_083F1FC0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083F1FC0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083F1FC0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083F1FC0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																								<xsl:for-each select="n1:SuperType">
																									<xsl:variable name="value-of-template_083F23B0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083F23B0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083F23B0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083F23B0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																			<fo:table-row>
																				<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<fo:inline>
																							<xsl:text>Synonyms</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:table-cell>
																				<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																					<fo:block text-align="left">
																						<xsl:choose>
																							<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																								<xsl:for-each select="n1:Synonyms">
																									<xsl:variable name="value-of-template_095219B8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_095219B8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_095219B8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_095219B8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																								<xsl:choose>
																									<xsl:when test="string-length(n1:Synonyms) &gt; 0">
																										<xsl:for-each select="n1:Synonyms">
																											<xsl:variable name="value-of-template_09521F18">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_09521F18),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_09521F18"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_09521F18"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:for-each>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:text>&#160;</xsl:text>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																								<xsl:for-each select="n1:Synonyms">
																									<xsl:variable name="value-of-template_095224E0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_095224E0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_095224E0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_095224E0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																								<xsl:for-each select="n1:Synonyms">
																									<xsl:variable name="value-of-template_095228D0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_095228D0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_095228D0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_095228D0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																								<xsl:for-each select="n1:Synonyms">
																									<xsl:variable name="value-of-template_09522CC0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09522CC0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09522CC0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09522CC0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																						</xsl:choose>
																					</fo:block>
																				</fo:table-cell>
																			</fo:table-row>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="string($altova:tablerows)">
																				<xsl:copy-of select="$altova:tablerows"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:table-row>
																					<fo:table-cell>
																						<fo:block/>
																					</fo:table-cell>
																				</fo:table-row>
																			</xsl:otherwise>
																		</xsl:choose>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell padding="0" display-align="center">
															<fo:block text-align="left"/>
														</fo:table-cell>
														<fo:table-cell font-size="xx-small" padding="0" display-align="before">
															<fo:block text-align="left">
																<xsl:if test="count( n1:MappedTablesCollection )">
																	<fo:inline font-size="xx-small" font-style="italic">
																		<xsl:text>Mapped Tables</xsl:text>
																	</fo:inline>
																	<fo:block/>
																	<fo:inline-container>
																		<fo:block>
																			<xsl:text>&#x200B;</xsl:text>
																		</fo:block>
																	</fo:inline-container>
																	<fo:table width="8cm" table-layout="fixed" border-spacing="0">
																		<fo:table-column column-width="8cm"/>
																		<xsl:variable name="altova:CurrContextGrid_0947A410" select="."/>
																		<fo:table-body start-indent="0pt">
																			<xsl:variable name="altova:tablerows">
																				<fo:table-row background-color="#d9f5ff">
																					<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																						<fo:block text-align="center">
																							<fo:inline>
																								<xsl:text>Table Name</xsl:text>
																							</fo:inline>
																						</fo:block>
																					</fo:table-cell>
																				</fo:table-row>
																				<xsl:for-each select="n1:MappedTablesCollection">
																					<xsl:for-each select="n1:MappedTablesDetails">
																						<fo:table-row>
																							<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																								<fo:block text-align="left">
																									<xsl:choose>
																										<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																											<xsl:for-each select="n1:TableName">
																												<xsl:variable name="value-of-template_09519300">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_09519300),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_09519300"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_09519300"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</xsl:when>
																										<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																											<xsl:choose>
																												<xsl:when test="string-length(n1:TableName) &gt; 0">
																													<xsl:for-each select="n1:TableName">
																														<xsl:variable name="value-of-template_09519910">
																															<xsl:apply-templates/>
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template_09519910),'&#x200B;')">
																																<fo:block>
																																	<xsl:copy-of select="$value-of-template_09519910"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline>
																																	<xsl:copy-of select="$value-of-template_09519910"/>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:text>&#160;</xsl:text>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																										</xsl:when>
																										<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																											<xsl:for-each select="n1:TableName">
																												<xsl:variable name="value-of-template_09519F18">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_09519F18),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_09519F18"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_09519F18"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</xsl:when>
																										<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																											<xsl:for-each select="n1:TableName">
																												<xsl:variable name="value-of-template_083DE228">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_083DE228),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_083DE228"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_083DE228"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</xsl:when>
																										<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																											<xsl:for-each select="n1:TableName">
																												<xsl:variable name="value-of-template_083DE558">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_083DE558),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_083DE558"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_083DE558"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																											</xsl:for-each>
																										</xsl:when>
																									</xsl:choose>
																								</fo:block>
																							</fo:table-cell>
																						</fo:table-row>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="string($altova:tablerows)">
																					<xsl:copy-of select="$altova:tablerows"/>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:table-row>
																						<fo:table-cell>
																							<fo:block/>
																						</fo:table-cell>
																					</fo:table-row>
																				</xsl:otherwise>
																			</xsl:choose>
																		</fo:table-body>
																	</fo:table>
																</xsl:if>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:inline>
											<xsl:text>&#160;</xsl:text>
										</fo:inline>
										<xsl:if test="count( n1:DescriptionNotes )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<xsl:for-each select="n1:DescriptionNotes">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x200B;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table width="20cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="16cm"/>
													<xsl:variable name="altova:CurrContextGrid_083DEC10" select="."/>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Description</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:Description">
																					<xsl:for-each select="n1:DescriptionDetails">
																						<xsl:for-each select="n1:DescriptionRow">
																							<xsl:variable name="value-of-template_083B4298">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083B4298),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083B4298"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083B4298"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Description/n1:DescriptionDetails/n1:DescriptionRow) &gt; 0">
																						<xsl:for-each select="n1:Description">
																							<xsl:for-each select="n1:DescriptionDetails">
																								<xsl:for-each select="n1:DescriptionRow">
																									<xsl:variable name="value-of-template_083B4BD0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083B4BD0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083B4BD0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083B4BD0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Description/n1:DescriptionDetails/n1:DescriptionRow) &gt; 0">
																						<xsl:for-each select="n1:Description">
																							<xsl:for-each select="n1:DescriptionDetails">
																								<xsl:for-each select="n1:DescriptionRow">
																									<xsl:variable name="value-of-template_09466348">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09466348),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09466348"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09466348"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise/>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:Description">
																					<xsl:for-each select="n1:DescriptionDetails">
																						<xsl:for-each select="n1:DescriptionRow">
																							<xsl:variable name="value-of-template_09466C38">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09466C38),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09466C38"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09466C38"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:Description">
																					<xsl:for-each select="n1:DescriptionDetails">
																						<xsl:for-each select="n1:DescriptionRow">
																							<xsl:variable name="value-of-template_08BDE7F0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BDE7F0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BDE7F0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BDE7F0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Notes</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:Notes">
																					<xsl:for-each select="n1:NotesDetails">
																						<xsl:for-each select="n1:NoteRow">
																							<xsl:variable name="value-of-template_08BDFDE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BDFDE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BDFDE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BDFDE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Notes/n1:NotesDetails/n1:NoteRow) &gt; 0">
																						<xsl:for-each select="n1:Notes">
																							<xsl:for-each select="n1:NotesDetails">
																								<xsl:for-each select="n1:NoteRow">
																									<xsl:variable name="value-of-template_097900B0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_097900B0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_097900B0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_097900B0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Notes/n1:NotesDetails/n1:NoteRow) &gt; 0">
																						<xsl:for-each select="n1:Notes">
																							<xsl:for-each select="n1:NotesDetails">
																								<xsl:for-each select="n1:NoteRow">
																									<xsl:variable name="value-of-template_09790C70">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09790C70),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09790C70"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09790C70"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise/>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:Notes">
																					<xsl:for-each select="n1:NotesDetails">
																						<xsl:for-each select="n1:NoteRow">
																							<xsl:variable name="value-of-template_0932AE90">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0932AE90),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0932AE90"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0932AE90"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:Notes">
																					<xsl:for-each select="n1:NotesDetails">
																						<xsl:for-each select="n1:NoteRow">
																							<xsl:variable name="value-of-template_0932B658">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0932B658),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0932B658"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0932B658"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:for-each>
										</xsl:if>
										<fo:inline>
											<xsl:text>&#160;</xsl:text>
										</fo:inline>
										<xsl:if test="count( n1:QuantitativeInfoCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<xsl:for-each select="n1:QuantitativeInfoCollection">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x200B;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table width="8cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="4cm"/>
													<xsl:variable name="altova:CurrContextGrid_0932BDA8" select="."/>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Number Of Attributes</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:NumberOfAttributes">
																					<xsl:variable name="value-of-template_083FFB80">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_083FFB80),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_083FFB80"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_083FFB80"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:NumberOfAttributes) &gt; 0">
																						<xsl:for-each select="n1:NumberOfAttributes">
																							<xsl:variable name="value-of-template_09A881E0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09A881E0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09A881E0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09A881E0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:NumberOfAttributes">
																					<xsl:variable name="value-of-template_09A88800">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09A88800),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09A88800"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09A88800"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:NumberOfAttributes">
																					<xsl:variable name="value-of-template_09A88BF0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09A88BF0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09A88BF0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09A88BF0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:NumberOfAttributes">
																					<xsl:variable name="value-of-template_09A88FE0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09A88FE0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09A88FE0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09A88FE0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Number Of Rows Min.</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_09B62BB8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09B62BB8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09B62BB8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09B62BB8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:NumberOfRowsMin) &gt; 0">
																						<xsl:for-each select="n1:NumberOfRowsMin">
																							<xsl:variable name="value-of-template_09B631C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09B631C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09B631C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09B631C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_09B637D0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09B637D0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09B637D0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09B637D0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_09B63BC0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09B63BC0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09B63BC0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09B63BC0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_08BF42C0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_08BF42C0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_08BF42C0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_08BF42C0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Number Of Rows Max.</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_08BF5560">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_08BF5560),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_08BF5560"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_08BF5560"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:NumberOfRowsMax) &gt; 0">
																						<xsl:for-each select="n1:NumberOfRowsMax">
																							<xsl:variable name="value-of-template_093815F0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093815F0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093815F0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093815F0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_09381BF8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09381BF8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09381BF8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09381BF8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_09381FE8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09381FE8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09381FE8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09381FE8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_093823D8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_093823D8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_093823D8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_093823D8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Expected Number Of Rows</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_08BCF710">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_08BCF710),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_08BCF710"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_08BCF710"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:ExpectedNumberOfRows) &gt; 0">
																						<xsl:for-each select="n1:ExpectedNumberOfRows">
																							<xsl:variable name="value-of-template_08BCFD10">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BCFD10),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BCFD10"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BCFD10"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_08BD0330">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_08BD0330),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_08BD0330"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_08BD0330"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_08BD0720">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_08BD0720),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_08BD0720"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_08BD0720"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_083F51A0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_083F51A0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_083F51A0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_083F51A0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Expected Growth</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_083F6338">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_083F6338),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_083F6338"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_083F6338"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:ExpectedGrowth) &gt; 0">
																						<xsl:for-each select="n1:ExpectedGrowth">
																							<xsl:variable name="value-of-template_094640C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_094640C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_094640C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_094640C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_094646D0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_094646D0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_094646D0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_094646D0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_09464AC0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09464AC0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09464AC0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09464AC0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_09464EB0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09464EB0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09464EB0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09464EB0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Growth Interval</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_094FA800">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_094FA800),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_094FA800"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_094FA800"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:GrowthInterval) &gt; 0">
																						<xsl:for-each select="n1:GrowthInterval">
																							<xsl:variable name="value-of-template_094FAE00">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_094FAE00),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_094FAE00"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_094FAE00"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_094FB408">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_094FB408),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_094FB408"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_094FB408"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_094FB7F8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_094FB7F8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_094FB7F8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_094FB7F8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_0940AA98">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0940AA98),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0940AA98"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0940AA98"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:for-each>
										</xsl:if>
										<xsl:if test="count( n1:AttributesCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Attributes</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:AttributesCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="1cm"/>
													<fo:table-column column-width="5cm"/>
													<fo:table-column column-width="0.800cm"/>
													<fo:table-column column-width="0.800cm"/>
													<fo:table-column column-width="0.800cm"/>
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="1cm"/>
													<fo:table-column column-width="2.900cm"/>
													<fo:table-column column-width="2.900cm"/>
													<fo:table-column column-width="2.900cm"/>
													<fo:table-column column-width="2.900cm"/>
													<xsl:variable name="altova:CurrContextGrid_0940B0D8" select="."/>
													<fo:table-header background-color="#d9f5ff" text-align="center" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>No</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Attribute Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>PK</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>FK</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>M</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Data Type</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>DT </xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>kind</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Domain Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Formula</xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>(Default Value)</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Preferred Abbreviation</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Synonyms</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:AttributesCollection">
																<xsl:for-each select="n1:AttributeDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="right">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_095279A0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_095279A0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_095279A0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_095279A0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Sequence) &gt; 0">
																								<xsl:for-each select="n1:Sequence">
																									<xsl:variable name="value-of-template_098028E8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_098028E8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_098028E8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_098028E8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_09802EF0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09802EF0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09802EF0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09802EF0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_098032E0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_098032E0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_098032E0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_098032E0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_098036D0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_098036D0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_098036D0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_098036D0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:AttributeName">
																							<xsl:variable name="value-of-template_083A11B8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083A11B8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083A11B8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083A11B8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:AttributeName) &gt; 0">
																								<xsl:for-each select="n1:AttributeName">
																									<xsl:variable name="value-of-template_083A17C8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083A17C8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083A17C8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083A17C8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:AttributeName">
																							<xsl:variable name="value-of-template_083A1DD0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083A1DD0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083A1DD0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083A1DD0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:AttributeName">
																							<xsl:variable name="value-of-template_083A21C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083A21C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083A21C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083A21C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:AttributeName">
																							<xsl:variable name="value-of-template_083A25B0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083A25B0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083A25B0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083A25B0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_09B93490">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09B93490),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09B93490"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09B93490"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:PK) &gt; 0">
																								<xsl:for-each select="n1:PK">
																									<xsl:variable name="value-of-template_09B93A90">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09B93A90),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09B93A90"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09B93A90"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_09B94060">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09B94060),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09B94060"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09B94060"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_09B94478">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09B94478),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09B94478"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09B94478"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_0840AB50">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0840AB50),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0840AB50"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0840AB50"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_0840B600">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0840B600),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0840B600"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0840B600"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FK) &gt; 0">
																								<xsl:for-each select="n1:FK">
																									<xsl:variable name="value-of-template_0840BBF0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0840BBF0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0840BBF0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0840BBF0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_0840C1C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0840C1C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0840C1C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0840C1C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_083E8558">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083E8558),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083E8558"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083E8558"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_083E8970">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083E8970),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083E8970"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083E8970"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_083E9430">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083E9430),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083E9430"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083E9430"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:M) &gt; 0">
																								<xsl:for-each select="n1:M">
																									<xsl:variable name="value-of-template_083E9A30">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083E9A30),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083E9A30"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083E9A30"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_093625F8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093625F8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093625F8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093625F8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_093629B0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093629B0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093629B0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093629B0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_09362DC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09362DC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09362DC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09362DC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_09363888">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09363888),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09363888"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09363888"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:DataType) &gt; 0">
																								<xsl:for-each select="n1:DataType">
																									<xsl:variable name="value-of-template_09363E78">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09363E78),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09363E78"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09363E78"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_09552F50">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09552F50),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09552F50"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09552F50"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_09553340">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09553340),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09553340"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09553340"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_09553730">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09553730),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09553730"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09553730"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_09554318">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09554318),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09554318"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09554318"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:DataTypeKind) &gt; 0">
																								<xsl:for-each select="n1:DataTypeKind">
																									<xsl:variable name="value-of-template_08BD6080">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08BD6080),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08BD6080"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08BD6080"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_08BD6688">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BD6688),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BD6688"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BD6688"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_08BD6A78">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BD6A78),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BD6A78"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BD6A78"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_08BD6E68">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BD6E68),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BD6E68"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BD6E68"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_08BD7958">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BD7958),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BD7958"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BD7958"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:DomainName) &gt; 0">
																								<xsl:for-each select="n1:DomainName">
																									<xsl:variable name="value-of-template_0934F1E8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0934F1E8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0934F1E8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0934F1E8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_0934F7F0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0934F7F0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0934F7F0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0934F7F0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_0934FBE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0934FBE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0934FBE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0934FBE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_0934FFD0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0934FFD0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0934FFD0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0934FFD0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_083CC538">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083CC538),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083CC538"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083CC538"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Formula) &gt; 0">
																								<xsl:for-each select="n1:Formula">
																									<xsl:variable name="value-of-template_083CCB28">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083CCB28),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083CCB28"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083CCB28"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_083CD180">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083CD180),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083CD180"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083CD180"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_083CD598">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083CD598),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083CD598"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083CD598"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_083CD9B0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083CD9B0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083CD9B0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083CD9B0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_09359B20">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09359B20),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09359B20"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09359B20"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:PreferredAbbreviation) &gt; 0">
																								<xsl:for-each select="n1:PreferredAbbreviation">
																									<xsl:variable name="value-of-template_0935A100">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0935A100),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0935A100"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0935A100"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_0935A720">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0935A720),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0935A720"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0935A720"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_0935AB10">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0935AB10),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0935AB10"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0935AB10"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_0935AF00">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0935AF00),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0935AF00"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0935AF00"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:AttributeSynonyms">
																							<xsl:variable name="value-of-template_092D4340">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092D4340),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092D4340"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092D4340"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:AttributeSynonyms) &gt; 0">
																								<xsl:for-each select="n1:AttributeSynonyms">
																									<xsl:variable name="value-of-template_092D4940">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_092D4940),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_092D4940"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_092D4940"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:AttributeSynonyms">
																							<xsl:variable name="value-of-template_092D4F60">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092D4F60),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092D4F60"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092D4F60"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:AttributeSynonyms">
																							<xsl:variable name="value-of-template_092D5350">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092D5350),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092D5350"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092D5350"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:AttributeSynonyms">
																							<xsl:variable name="value-of-template_092D5740">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092D5740),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092D5740"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092D5740"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:AttributesCommentsCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Attributes Comments</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:AttributesCommentsCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="1cm"/>
													<fo:table-column column-width="6cm"/>
													<fo:table-column column-width="9cm"/>
													<fo:table-column column-width="9cm"/>
													<xsl:variable name="altova:CurrContextGrid_092DB0B0" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>No</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Attribute Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Description</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Notes</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:AttributesCommentsCollection">
																<xsl:for-each select="n1:AttributeCommentsDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="right">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:AttributeCommentsSequence">
																							<xsl:variable name="value-of-template_09475578">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09475578),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09475578"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09475578"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:AttributeCommentsSequence) &gt; 0">
																								<xsl:for-each select="n1:AttributeCommentsSequence">
																									<xsl:variable name="value-of-template_09475B88">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09475B88),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09475B88"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09475B88"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:AttributeCommentsSequence">
																							<xsl:variable name="value-of-template_094761A8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_094761A8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_094761A8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_094761A8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:AttributeCommentsSequence">
																							<xsl:variable name="value-of-template_09476598">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09476598),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09476598"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09476598"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:AttributeCommentsSequence">
																							<xsl:variable name="value-of-template_09476988">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09476988),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09476988"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09476988"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:AttributeCommentsName">
																							<xsl:variable name="value-of-template_083C5C80">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083C5C80),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083C5C80"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083C5C80"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:AttributeCommentsName) &gt; 0">
																								<xsl:for-each select="n1:AttributeCommentsName">
																									<xsl:variable name="value-of-template_083C6280">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083C6280),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083C6280"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083C6280"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:AttributeCommentsName">
																							<xsl:variable name="value-of-template_083C68A0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083C68A0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083C68A0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083C68A0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:AttributeCommentsName">
																							<xsl:variable name="value-of-template_083C6C90">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083C6C90),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083C6C90"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083C6C90"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:AttributeCommentsName">
																							<xsl:variable name="value-of-template_083C7080">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083C7080),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083C7080"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083C7080"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:AttributeDescription">
																							<xsl:for-each select="n1:AttributeDescriptionDetails">
																								<xsl:for-each select="n1:AttributeDescriptionRow">
																									<xsl:variable name="value-of-template_0984DDC0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0984DDC0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0984DDC0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0984DDC0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:AttributeDescription/n1:AttributeDescriptionDetails/n1:AttributeDescriptionRow) &gt; 0">
																								<xsl:for-each select="n1:AttributeDescription">
																									<xsl:for-each select="n1:AttributeDescriptionDetails">
																										<xsl:for-each select="n1:AttributeDescriptionRow">
																											<xsl:variable name="value-of-template_0984E7D8">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_0984E7D8),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_0984E7D8"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_0984E7D8"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:AttributeDescription/n1:AttributeDescriptionDetails/n1:AttributeDescriptionRow) &gt; 0">
																								<xsl:for-each select="n1:AttributeDescription">
																									<xsl:for-each select="n1:AttributeDescriptionDetails">
																										<xsl:for-each select="n1:AttributeDescriptionRow">
																											<xsl:variable name="value-of-template_09309268">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_09309268),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_09309268"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_09309268"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise/>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:AttributeDescription">
																							<xsl:for-each select="n1:AttributeDescriptionDetails">
																								<xsl:for-each select="n1:AttributeDescriptionRow">
																									<xsl:variable name="value-of-template_09309AE8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09309AE8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09309AE8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09309AE8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:AttributeDescription">
																							<xsl:for-each select="n1:AttributeDescriptionDetails">
																								<xsl:for-each select="n1:AttributeDescriptionRow">
																									<xsl:variable name="value-of-template_0930A260">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0930A260),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0930A260"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0930A260"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:AttributeNotes">
																							<xsl:for-each select="n1:AttributeNotesDetails">
																								<xsl:for-each select="n1:AttributeNoteRow">
																									<xsl:variable name="value-of-template_084E4DC8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_084E4DC8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_084E4DC8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_084E4DC8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:AttributeNotes/n1:AttributeNotesDetails/n1:AttributeNoteRow) &gt; 0">
																								<xsl:for-each select="n1:AttributeNotes">
																									<xsl:for-each select="n1:AttributeNotesDetails">
																										<xsl:for-each select="n1:AttributeNoteRow">
																											<xsl:variable name="value-of-template_084E5780">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_084E5780),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_084E5780"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_084E5780"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:AttributeNotes/n1:AttributeNotesDetails/n1:AttributeNoteRow) &gt; 0">
																								<xsl:for-each select="n1:AttributeNotes">
																									<xsl:for-each select="n1:AttributeNotesDetails">
																										<xsl:for-each select="n1:AttributeNoteRow">
																											<xsl:variable name="value-of-template_084E62E0">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_084E62E0),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_084E62E0"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_084E62E0"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise/>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:AttributeNotes">
																							<xsl:for-each select="n1:AttributeNotesDetails">
																								<xsl:for-each select="n1:AttributeNoteRow">
																									<xsl:variable name="value-of-template_0952D398">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0952D398),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0952D398"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0952D398"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:AttributeNotes">
																							<xsl:for-each select="n1:AttributeNotesDetails">
																								<xsl:for-each select="n1:AttributeNoteRow">
																									<xsl:variable name="value-of-template_0952DB10">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0952DB10),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0952DB10"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0952DB10"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:ConstraintsCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Constraints</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:ConstraintsCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="3cm"/>
													<fo:table-column column-width="3cm"/>
													<fo:table-column column-width="19cm"/>
													<xsl:variable name="altova:CurrContextGrid_0952E310" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Type</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Attribute / Constraint Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Details</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:ConstraintsCollection">
																<xsl:for-each select="n1:ConstraintDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ContstraintType">
																							<xsl:variable name="value-of-template_09350FF0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09350FF0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09350FF0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09350FF0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:ContstraintType) &gt; 0">
																								<xsl:for-each select="n1:ContstraintType">
																									<xsl:variable name="value-of-template_09351600">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09351600),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09351600"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09351600"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:ContstraintType">
																							<xsl:variable name="value-of-template_09351C08">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09351C08),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09351C08"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09351C08"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ContstraintType">
																							<xsl:variable name="value-of-template_09351FF8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09351FF8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09351FF8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09351FF8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ContstraintType">
																							<xsl:variable name="value-of-template_093523E8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093523E8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093523E8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093523E8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ALCConstraintName">
																							<xsl:variable name="value-of-template_09E9F898">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09E9F898),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09E9F898"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09E9F898"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:ALCConstraintName) &gt; 0">
																								<xsl:for-each select="n1:ALCConstraintName">
																									<xsl:variable name="value-of-template_09E9FE88">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09E9FE88),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09E9FE88"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09E9FE88"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:ALCConstraintName">
																							<xsl:variable name="value-of-template_09EA04A8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09EA04A8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09EA04A8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09EA04A8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ALCConstraintName">
																							<xsl:variable name="value-of-template_09EA0898">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09EA0898),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09EA0898"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09EA0898"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ALCConstraintName">
																							<xsl:variable name="value-of-template_09EA0C88">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09EA0C88),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09EA0C88"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09EA0C88"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:if test="count( n1:RangesCollection ) != 0">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x200B;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<xsl:if test="n1:RangesCollection">
																						<fo:table width="18.5cm" table-layout="fixed" border-spacing="0">
																							<fo:table-column column-width="3cm"/>
																							<fo:table-column column-width="3cm"/>
																							<fo:table-column column-width="12.500cm"/>
																							<xsl:variable name="altova:CurrContextGrid_0935B9C0" select="."/>
																							<fo:table-header background-color="#d9f5ff" start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<fo:table-row>
																										<fo:table-cell number-columns-spanned="3" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Ranges</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Begin Value</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>End Value</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Description</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-header>
																							<fo:table-body start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<xsl:for-each select="n1:RangesCollection">
																										<xsl:for-each select="n1:RangeDetails">
																											<fo:table-row>
																												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																													<fo:block text-align="right">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:RangeBeginValue">
																																	<xsl:variable name="value-of-template_09BDE1C8">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_09BDE1C8),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_09BDE1C8"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_09BDE1C8"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:RangeBeginValue) &gt; 0">
																																		<xsl:for-each select="n1:RangeBeginValue">
																																			<xsl:variable name="value-of-template_09BDE7D8">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_09BDE7D8),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_09BDE7D8"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_09BDE7D8"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:text>&#160;</xsl:text>
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:RangeBeginValue">
																																	<xsl:variable name="value-of-template_09BDEDE0">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_09BDEDE0),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_09BDEDE0"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_09BDEDE0"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:RangeBeginValue">
																																	<xsl:variable name="value-of-template_0947D310">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_0947D310),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_0947D310"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_0947D310"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:RangeBeginValue">
																																	<xsl:variable name="value-of-template_0947D700">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_0947D700),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_0947D700"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_0947D700"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																													<fo:block text-align="right">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:RangeEndValue">
																																	<xsl:variable name="value-of-template_0947E1E0">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_0947E1E0),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_0947E1E0"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_0947E1E0"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:RangeEndValue) &gt; 0">
																																		<xsl:for-each select="n1:RangeEndValue">
																																			<xsl:variable name="value-of-template_0947E7E0">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_0947E7E0),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_0947E7E0"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_0947E7E0"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:text>&#160;</xsl:text>
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:RangeEndValue">
																																	<xsl:variable name="value-of-template_0947EDE8">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_0947EDE8),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_0947EDE8"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_0947EDE8"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:RangeEndValue">
																																	<xsl:variable name="value-of-template_097B3D58">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_097B3D58),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_097B3D58"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_097B3D58"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:RangeEndValue">
																																	<xsl:variable name="value-of-template_097B4148">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_097B4148),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_097B4148"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_097B4148"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																													<fo:block text-align="left">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:RangeShortDescription">
																																	<xsl:variable name="value-of-template_097B4B80">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_097B4B80),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_097B4B80"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_097B4B80"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:RangeShortDescription) &gt; 0">
																																		<xsl:for-each select="n1:RangeShortDescription">
																																			<xsl:variable name="value-of-template_097B5180">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_097B5180),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_097B5180"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_097B5180"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:text>&#160;</xsl:text>
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:RangeShortDescription">
																																	<xsl:variable name="value-of-template_097B57A0">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_097B57A0),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_097B57A0"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_097B57A0"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:RangeShortDescription">
																																	<xsl:variable name="value-of-template_08452228">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_08452228),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_08452228"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_08452228"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:RangeShortDescription">
																																	<xsl:variable name="value-of-template_08452618">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_08452618),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_08452618"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_08452618"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</fo:block>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-body>
																						</fo:table>
																					</xsl:if>
																				</xsl:if>
																				<xsl:if test="count( n1:ValueListsCollection ) != 0">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x200B;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<xsl:if test="n1:ValueListsCollection">
																						<fo:table width="18.5cm" table-layout="fixed" border-spacing="0">
																							<fo:table-column column-width="3cm"/>
																							<fo:table-column column-width="15.500cm"/>
																							<xsl:variable name="altova:CurrContextGrid_084529B8" select="."/>
																							<fo:table-header background-color="#d9f5ff" start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<fo:table-row>
																										<fo:table-cell number-columns-spanned="2" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Value List</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Value</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Description</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-header>
																							<fo:table-body start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<xsl:for-each select="n1:ValueListsCollection">
																										<xsl:for-each select="n1:ValueListDetails">
																											<fo:table-row>
																												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																													<fo:block text-align="left">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:VLValue">
																																	<xsl:variable name="value-of-template_0943CD80">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_0943CD80),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_0943CD80"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_0943CD80"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:VLValue) &gt; 0">
																																		<xsl:for-each select="n1:VLValue">
																																			<xsl:variable name="value-of-template_094430A0">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_094430A0),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_094430A0"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_094430A0"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:text>&#160;</xsl:text>
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:VLValue">
																																	<xsl:variable name="value-of-template_094436F8">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_094436F8),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_094436F8"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_094436F8"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:VLValue">
																																	<xsl:variable name="value-of-template_09443B10">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_09443B10),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_09443B10"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_09443B10"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:VLValue">
																																	<xsl:variable name="value-of-template_09443F28">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_09443F28),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_09443F28"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_09443F28"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																													<fo:block text-align="left">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:VLShortDescription">
																																	<xsl:variable name="value-of-template_094448A8">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_094448A8),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_094448A8"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_094448A8"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:VLShortDescription) &gt; 0">
																																		<xsl:for-each select="n1:VLShortDescription">
																																			<xsl:variable name="value-of-template_093072F8">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_093072F8),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_093072F8"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_093072F8"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:text>&#160;</xsl:text>
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:VLShortDescription">
																																	<xsl:variable name="value-of-template_09307918">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_09307918),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_09307918"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_09307918"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:VLShortDescription">
																																	<xsl:variable name="value-of-template_09307D08">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_09307D08),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_09307D08"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_09307D08"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:VLShortDescription">
																																	<xsl:variable name="value-of-template_093080F8">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_093080F8),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_093080F8"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_093080F8"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</fo:block>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-body>
																						</fo:table>
																					</xsl:if>
																				</xsl:if>
																				<xsl:if test="count( n1:CheckConstraintsCollection ) != 0">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x200B;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<xsl:if test="n1:CheckConstraintsCollection">
																						<fo:table width="18.5cm" table-layout="fixed" border-spacing="0">
																							<fo:table-column column-width="15.500cm"/>
																							<fo:table-column column-width="3cm"/>
																							<xsl:variable name="altova:CurrContextGrid_09308498" select="."/>
																							<fo:table-header background-color="#d9f5ff" start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<fo:table-row>
																										<fo:table-cell number-columns-spanned="2" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Check Constraint</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																									<fo:table-row>
																										<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>Text</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																										<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																											<fo:block text-align="center">
																												<fo:inline>
																													<xsl:text>DB Type</xsl:text>
																												</fo:inline>
																											</fo:block>
																										</fo:table-cell>
																									</fo:table-row>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-header>
																							<fo:table-body start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<xsl:for-each select="n1:CheckConstraintsCollection">
																										<xsl:for-each select="n1:CheckConstraintDetails">
																											<fo:table-row>
																												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																													<fo:block text-align="left">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:CheckConstraintText">
																																	<xsl:for-each select="n1:CheckConstraintTextDetails">
																																		<xsl:for-each select="n1:CheckConstraintTextRow">
																																			<xsl:variable name="value-of-template_09729A68">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_09729A68),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_09729A68"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_09729A68"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																			<fo:block/>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="count(n1:CheckConstraintText/n1:CheckConstraintTextDetails/n1:CheckConstraintTextRow) &gt; 0">
																																		<xsl:for-each select="n1:CheckConstraintText">
																																			<xsl:for-each select="n1:CheckConstraintTextDetails">
																																				<xsl:for-each select="n1:CheckConstraintTextRow">
																																					<xsl:variable name="value-of-template_0972A420">
																																						<xsl:apply-templates/>
																																					</xsl:variable>
																																					<xsl:choose>
																																						<xsl:when test="contains(string($value-of-template_0972A420),'&#x200B;')">
																																							<fo:block>
																																								<xsl:copy-of select="$value-of-template_0972A420"/>
																																							</fo:block>
																																						</xsl:when>
																																						<xsl:otherwise>
																																							<fo:inline>
																																								<xsl:copy-of select="$value-of-template_0972A420"/>
																																							</fo:inline>
																																						</xsl:otherwise>
																																					</xsl:choose>
																																					<fo:block/>
																																				</xsl:for-each>
																																			</xsl:for-each>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:text>&#160;</xsl:text>
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:choose>
																																	<xsl:when test="count(n1:CheckConstraintText/n1:CheckConstraintTextDetails/n1:CheckConstraintTextRow) &gt; 0">
																																		<xsl:for-each select="n1:CheckConstraintText">
																																			<xsl:for-each select="n1:CheckConstraintTextDetails">
																																				<xsl:for-each select="n1:CheckConstraintTextRow">
																																					<xsl:variable name="value-of-template_0972AF10">
																																						<xsl:apply-templates/>
																																					</xsl:variable>
																																					<xsl:choose>
																																						<xsl:when test="contains(string($value-of-template_0972AF10),'&#x200B;')">
																																							<fo:block>
																																								<xsl:copy-of select="$value-of-template_0972AF10"/>
																																							</fo:block>
																																						</xsl:when>
																																						<xsl:otherwise>
																																							<fo:inline>
																																								<xsl:copy-of select="$value-of-template_0972AF10"/>
																																							</fo:inline>
																																						</xsl:otherwise>
																																					</xsl:choose>
																																					<fo:block/>
																																				</xsl:for-each>
																																			</xsl:for-each>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise/>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:CheckConstraintText">
																																	<xsl:for-each select="n1:CheckConstraintTextDetails">
																																		<xsl:for-each select="n1:CheckConstraintTextRow">
																																			<xsl:variable name="value-of-template_08625538">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_08625538),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_08625538"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_08625538"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																			<fo:block/>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:CheckConstraintText">
																																	<xsl:for-each select="n1:CheckConstraintTextDetails">
																																		<xsl:for-each select="n1:CheckConstraintTextRow">
																																			<xsl:variable name="value-of-template_08625CB0">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_08625CB0),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_08625CB0"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_08625CB0"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																			<fo:block/>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</fo:block>
																												</fo:table-cell>
																												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																													<fo:block text-align="left">
																														<xsl:choose>
																															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																<xsl:for-each select="n1:DatabaseType">
																																	<xsl:variable name="value-of-template_086266C0">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_086266C0),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_086266C0"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_086266C0"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																<xsl:choose>
																																	<xsl:when test="string-length(n1:DatabaseType) &gt; 0">
																																		<xsl:for-each select="n1:DatabaseType">
																																			<xsl:variable name="value-of-template_08626C60">
																																				<xsl:apply-templates/>
																																			</xsl:variable>
																																			<xsl:choose>
																																				<xsl:when test="contains(string($value-of-template_08626C60),'&#x200B;')">
																																					<fo:block>
																																						<xsl:copy-of select="$value-of-template_08626C60"/>
																																					</fo:block>
																																				</xsl:when>
																																				<xsl:otherwise>
																																					<fo:inline>
																																						<xsl:copy-of select="$value-of-template_08626C60"/>
																																					</fo:inline>
																																				</xsl:otherwise>
																																			</xsl:choose>
																																		</xsl:for-each>
																																	</xsl:when>
																																	<xsl:otherwise>
																																		<fo:inline>
																																			<xsl:text>&#160;</xsl:text>
																																		</fo:inline>
																																	</xsl:otherwise>
																																</xsl:choose>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																<xsl:for-each select="n1:DatabaseType">
																																	<xsl:variable name="value-of-template_083AF7E0">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_083AF7E0),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_083AF7E0"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_083AF7E0"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																<xsl:for-each select="n1:DatabaseType">
																																	<xsl:variable name="value-of-template_083AFBD0">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_083AFBD0),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_083AFBD0"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_083AFBD0"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																<xsl:for-each select="n1:DatabaseType">
																																	<xsl:variable name="value-of-template_083AFFC0">
																																		<xsl:apply-templates/>
																																	</xsl:variable>
																																	<xsl:choose>
																																		<xsl:when test="contains(string($value-of-template_083AFFC0),'&#x200B;')">
																																			<fo:block>
																																				<xsl:copy-of select="$value-of-template_083AFFC0"/>
																																			</fo:block>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:copy-of select="$value-of-template_083AFFC0"/>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:for-each>
																															</xsl:when>
																														</xsl:choose>
																													</fo:block>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-body>
																						</fo:table>
																					</xsl:if>
																				</xsl:if>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:IdentifiersCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Identifiers</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:IdentifiersCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="7cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="6cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="4cm"/>
													<xsl:variable name="altova:CurrContextGrid_083B06A0" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Primary</xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>Identifyer</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Element Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Element</xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>Type</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Source Label</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Target Label</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:IdentifiersCollection">
																<xsl:for-each select="n1:IdentifierDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IdentifierName">
																							<xsl:variable name="value-of-template_094DCAF0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_094DCAF0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_094DCAF0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_094DCAF0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IdentifierName) &gt; 0">
																								<xsl:for-each select="n1:IdentifierName">
																									<xsl:variable name="value-of-template_094DD050">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_094DD050),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_094DD050"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_094DD050"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IdentifierName">
																							<xsl:variable name="value-of-template_094DD618">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_094DD618),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_094DD618"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_094DD618"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IdentifierName">
																							<xsl:variable name="value-of-template_093E18D0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E18D0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E18D0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E18D0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IdentifierName">
																							<xsl:variable name="value-of-template_093E1CC0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E1CC0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E1CC0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E1CC0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:PrimaryIdentifier">
																							<xsl:variable name="value-of-template_093E27C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E27C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E27C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E27C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:PrimaryIdentifier) &gt; 0">
																								<xsl:for-each select="n1:PrimaryIdentifier">
																									<xsl:variable name="value-of-template_093E2D28">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_093E2D28),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_093E2D28"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_093E2D28"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:PrimaryIdentifier">
																							<xsl:variable name="value-of-template_093E3358">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E3358),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E3358"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E3358"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:PrimaryIdentifier">
																							<xsl:variable name="value-of-template_093E3748">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E3748),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E3748"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E3748"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:PrimaryIdentifier">
																							<xsl:variable name="value-of-template_09795890">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09795890),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09795890"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09795890"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ElementName">
																							<xsl:variable name="value-of-template_097962C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_097962C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_097962C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_097962C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:ElementName) &gt; 0">
																								<xsl:for-each select="n1:ElementName">
																									<xsl:variable name="value-of-template_097968D8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_097968D8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_097968D8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_097968D8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:ElementName">
																							<xsl:variable name="value-of-template_09796EE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09796EE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09796EE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09796EE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ElementName">
																							<xsl:variable name="value-of-template_097972D0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_097972D0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_097972D0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_097972D0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ElementName">
																							<xsl:variable name="value-of-template_097976C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_097976C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_097976C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_097976C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ElementType">
																							<xsl:variable name="value-of-template_0863AA08">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0863AA08),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0863AA08"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0863AA08"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:ElementType) &gt; 0">
																								<xsl:for-each select="n1:ElementType">
																									<xsl:variable name="value-of-template_0863AFF8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0863AFF8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0863AFF8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0863AFF8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:ElementType">
																							<xsl:variable name="value-of-template_0863B600">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0863B600),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0863B600"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0863B600"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ElementType">
																							<xsl:variable name="value-of-template_0863B9F0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0863B9F0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0863B9F0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0863B9F0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ElementType">
																							<xsl:variable name="value-of-template_0863BDE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0863BDE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0863BDE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0863BDE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:SourceLabel">
																							<xsl:variable name="value-of-template_0860BA38">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0860BA38),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0860BA38"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0860BA38"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:SourceLabel) &gt; 0">
																								<xsl:for-each select="n1:SourceLabel">
																									<xsl:variable name="value-of-template_0860C038">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0860C038),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0860C038"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0860C038"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:SourceLabel">
																							<xsl:variable name="value-of-template_0860C640">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0860C640),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0860C640"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0860C640"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:SourceLabel">
																							<xsl:variable name="value-of-template_0860CA30">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0860CA30),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0860CA30"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0860CA30"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:SourceLabel">
																							<xsl:variable name="value-of-template_0860CE20">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0860CE20),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0860CE20"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0860CE20"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:TargetLabel">
																							<xsl:variable name="value-of-template_0860D8E0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0860D8E0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0860D8E0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0860D8E0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:TargetLabel) &gt; 0">
																								<xsl:for-each select="n1:TargetLabel">
																									<xsl:variable name="value-of-template_098062E8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_098062E8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_098062E8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_098062E8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:TargetLabel">
																							<xsl:variable name="value-of-template_098068F0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_098068F0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_098068F0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_098068F0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:TargetLabel">
																							<xsl:variable name="value-of-template_09806CE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09806CE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09806CE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09806CE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:TargetLabel">
																							<xsl:variable name="value-of-template_098070D0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_098070D0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_098070D0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_098070D0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:RelationshipsCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Has Relationships With</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:RelationshipsCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="5cm"/>
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="2.500cm"/>
													<fo:table-column column-width="2.500cm"/>
													<fo:table-column column-width="2.500cm"/>
													<fo:table-column column-width="2.500cm"/>
													<xsl:variable name="altova:CurrContextGrid_09807738" select="."/>
													<fo:table-header background-color="#d9f5ff" text-align="center" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Entity Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Role</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Other Role</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>In Arc</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Cardinality</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Dominant</xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>Role</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Identifying</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Transferable</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:RelationshipsCollection">
																<xsl:for-each select="n1:RelationshipDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:SourceName">
																							<xsl:variable name="value-of-template_084F3920">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_084F3920),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_084F3920"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_084F3920"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:SourceName) &gt; 0">
																								<xsl:for-each select="n1:SourceName">
																									<xsl:variable name="value-of-template_084F3F30">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_084F3F30),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_084F3F30"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_084F3F30"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:SourceName">
																							<xsl:variable name="value-of-template_084F4538">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_084F4538),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_084F4538"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_084F4538"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:SourceName">
																							<xsl:variable name="value-of-template_084F4928">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_084F4928),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_084F4928"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_084F4928"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:SourceName">
																							<xsl:variable name="value-of-template_084F4D18">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_084F4D18),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_084F4D18"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_084F4D18"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:SourceRole">
																							<xsl:variable name="value-of-template_08C00618">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C00618),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C00618"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C00618"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:SourceRole) &gt; 0">
																								<xsl:for-each select="n1:SourceRole">
																									<xsl:variable name="value-of-template_08C00C28">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08C00C28),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08C00C28"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08C00C28"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:SourceRole">
																							<xsl:variable name="value-of-template_08C01230">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C01230),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C01230"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C01230"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:SourceRole">
																							<xsl:variable name="value-of-template_08C01620">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C01620),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C01620"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C01620"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:SourceRole">
																							<xsl:variable name="value-of-template_08C01A10">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C01A10),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C01A10"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C01A10"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:TargetRole">
																							<xsl:variable name="value-of-template_09684A90">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09684A90),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09684A90"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09684A90"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:TargetRole) &gt; 0">
																								<xsl:for-each select="n1:TargetRole">
																									<xsl:variable name="value-of-template_09685090">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09685090),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09685090"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09685090"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:TargetRole">
																							<xsl:variable name="value-of-template_09685698">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09685698),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09685698"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09685698"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:TargetRole">
																							<xsl:variable name="value-of-template_09685A88">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09685A88),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09685A88"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09685A88"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:TargetRole">
																							<xsl:variable name="value-of-template_09685E78">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09685E78),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09685E78"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09685E78"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:InArc">
																							<xsl:variable name="value-of-template_09686AA8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09686AA8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09686AA8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09686AA8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:InArc) &gt; 0">
																								<xsl:for-each select="n1:InArc">
																									<xsl:variable name="value-of-template_0980DC58">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0980DC58),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0980DC58"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0980DC58"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:InArc">
																							<xsl:variable name="value-of-template_0980E228">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0980E228),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0980E228"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0980E228"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:InArc">
																							<xsl:variable name="value-of-template_0980E640">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0980E640),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0980E640"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0980E640"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:InArc">
																							<xsl:variable name="value-of-template_0980EA58">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0980EA58),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0980EA58"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0980EA58"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Cardinality">
																							<xsl:variable name="value-of-template_0980F548">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0980F548),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0980F548"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0980F548"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Cardinality) &gt; 0">
																								<xsl:for-each select="n1:Cardinality">
																									<xsl:variable name="value-of-template_0980FB48">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0980FB48),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0980FB48"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0980FB48"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Cardinality">
																							<xsl:variable name="value-of-template_08C07B78">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C07B78),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C07B78"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C07B78"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Cardinality">
																							<xsl:variable name="value-of-template_08C07F68">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C07F68),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C07F68"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C07F68"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Cardinality">
																							<xsl:variable name="value-of-template_08C08358">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C08358),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C08358"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C08358"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:DominantRole">
																							<xsl:variable name="value-of-template_08C08F20">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C08F20),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C08F20"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C08F20"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:DominantRole) &gt; 0">
																								<xsl:for-each select="n1:DominantRole">
																									<xsl:variable name="value-of-template_08C09510">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08C09510),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08C09510"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08C09510"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:DominantRole">
																							<xsl:variable name="value-of-template_08C09B18">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08C09B18),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08C09B18"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08C09B18"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:DominantRole">
																							<xsl:variable name="value-of-template_092F1078">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092F1078),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092F1078"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092F1078"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:DominantRole">
																							<xsl:variable name="value-of-template_092F1438">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092F1438),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092F1438"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092F1438"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Identifying">
																							<xsl:variable name="value-of-template_092F1FB8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092F1FB8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092F1FB8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092F1FB8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Identifying) &gt; 0">
																								<xsl:for-each select="n1:Identifying">
																									<xsl:variable name="value-of-template_092F25B8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_092F25B8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_092F25B8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_092F25B8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Identifying">
																							<xsl:variable name="value-of-template_092F2BC0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092F2BC0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092F2BC0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092F2BC0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Identifying">
																							<xsl:variable name="value-of-template_092F2FB0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092F2FB0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092F2FB0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092F2FB0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Identifying">
																							<xsl:variable name="value-of-template_092F33A0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092F33A0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092F33A0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092F33A0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Transferable">
																							<xsl:variable name="value-of-template_093E43D8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E43D8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E43D8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E43D8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Transferable) &gt; 0">
																								<xsl:for-each select="n1:Transferable">
																									<xsl:variable name="value-of-template_093E49D8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_093E49D8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_093E49D8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_093E49D8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Transferable">
																							<xsl:variable name="value-of-template_093E4FE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E4FE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E4FE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E4FE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Transferable">
																							<xsl:variable name="value-of-template_093E53D0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E53D0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E53D0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E53D0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Transferable">
																							<xsl:variable name="value-of-template_093E57C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_093E57C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_093E57C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_093E57C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:IncomingProcessesCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Incoming Processes</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:IncomingProcessesCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="7.500cm"/>
													<fo:table-column column-width="7.500cm"/>
													<fo:table-column column-width="2.500cm"/>
													<fo:table-column column-width="7.500cm"/>
													<xsl:variable name="altova:CurrContextGrid_093E5E00" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Process Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Flow Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>CRUD Code</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>DFD Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:IncomingProcessesCollection">
																<xsl:for-each select="n1:IncomingProcessDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IncomingProcessName">
																							<xsl:variable name="value-of-template_08BDBCD0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BDBCD0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BDBCD0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BDBCD0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IncomingProcessName) &gt; 0">
																								<xsl:for-each select="n1:IncomingProcessName">
																									<xsl:variable name="value-of-template_08BDC2F0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08BDC2F0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08BDC2F0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08BDC2F0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IncomingProcessName">
																							<xsl:variable name="value-of-template_08BDC910">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BDC910),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BDC910"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BDC910"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IncomingProcessName">
																							<xsl:variable name="value-of-template_08BDCD00">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BDCD00),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BDCD00"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BDCD00"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IncomingProcessName">
																							<xsl:variable name="value-of-template_08BDD0F0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08BDD0F0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08BDD0F0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08BDD0F0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IncomingFlowName">
																							<xsl:variable name="value-of-template_0928F518">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0928F518),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0928F518"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0928F518"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IncomingFlowName) &gt; 0">
																								<xsl:for-each select="n1:IncomingFlowName">
																									<xsl:variable name="value-of-template_0928FB28">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0928FB28),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0928FB28"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0928FB28"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IncomingFlowName">
																							<xsl:variable name="value-of-template_09290148">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09290148),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09290148"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09290148"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IncomingFlowName">
																							<xsl:variable name="value-of-template_09290538">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09290538),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09290538"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09290538"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IncomingFlowName">
																							<xsl:variable name="value-of-template_09290928">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09290928),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09290928"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09290928"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IncomingCRUDCode">
																							<xsl:variable name="value-of-template_09291490">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09291490),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09291490"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09291490"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IncomingCRUDCode) &gt; 0">
																								<xsl:for-each select="n1:IncomingCRUDCode">
																									<xsl:variable name="value-of-template_09291A90">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_09291A90),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_09291A90"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_09291A90"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IncomingCRUDCode">
																							<xsl:variable name="value-of-template_083D9AB0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083D9AB0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083D9AB0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083D9AB0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IncomingCRUDCode">
																							<xsl:variable name="value-of-template_083D9EA0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083D9EA0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083D9EA0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083D9EA0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IncomingCRUDCode">
																							<xsl:variable name="value-of-template_083DA290">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083DA290),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083DA290"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083DA290"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IncomingDFDName">
																							<xsl:variable name="value-of-template_083DACC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083DACC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083DACC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083DACC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IncomingDFDName) &gt; 0">
																								<xsl:for-each select="n1:IncomingDFDName">
																									<xsl:variable name="value-of-template_083DB2B8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_083DB2B8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_083DB2B8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_083DB2B8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IncomingDFDName">
																							<xsl:variable name="value-of-template_083DB8C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083DB8C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083DB8C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083DB8C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IncomingDFDName">
																							<xsl:variable name="value-of-template_083DBCB0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083DBCB0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083DBCB0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083DBCB0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IncomingDFDName">
																							<xsl:variable name="value-of-template_083DC0A0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_083DC0A0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_083DC0A0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_083DC0A0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:OutgoingProcessesCollection ) !=0">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Outgoing Processes</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:OutgoingProcessesCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="7.500cm"/>
													<fo:table-column column-width="7.500cm"/>
													<fo:table-column column-width="2.500cm"/>
													<fo:table-column column-width="7.500cm"/>
													<xsl:variable name="altova:CurrContextGrid_083DC708" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Process Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Flow Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>CRUD Code</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>DFD Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:OutgoingProcessesCollection">
																<xsl:for-each select="n1:OugoingProcessDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:OutgoingProcessName">
																							<xsl:variable name="value-of-template_0AEC3328">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC3328),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC3328"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC3328"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:OutgoingProcessName) &gt; 0">
																								<xsl:for-each select="n1:OutgoingProcessName">
																									<xsl:variable name="value-of-template_0AEC3938">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0AEC3938),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0AEC3938"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0AEC3938"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:OutgoingProcessName">
																							<xsl:variable name="value-of-template_0AEC3F58">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC3F58),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC3F58"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC3F58"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:OutgoingProcessName">
																							<xsl:variable name="value-of-template_0AEC4348">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC4348),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC4348"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC4348"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:OutgoingProcessName">
																							<xsl:variable name="value-of-template_0AEC4738">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC4738),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC4738"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC4738"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:OutgoingFlowName">
																							<xsl:variable name="value-of-template_0AEC5080">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC5080),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC5080"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC5080"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:OutgoingFlowName) &gt; 0">
																								<xsl:for-each select="n1:OutgoingFlowName">
																									<xsl:variable name="value-of-template_0AEC5690">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0AEC5690),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0AEC5690"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0AEC5690"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:OutgoingFlowName">
																							<xsl:variable name="value-of-template_0AEC5CB0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC5CB0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC5CB0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC5CB0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:OutgoingFlowName">
																							<xsl:variable name="value-of-template_0AEC60A0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC60A0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC60A0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC60A0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:OutgoingFlowName">
																							<xsl:variable name="value-of-template_0AEC6490">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC6490),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC6490"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC6490"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:OutgoingCRUDCode">
																							<xsl:variable name="value-of-template_0AEC6FF8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC6FF8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC6FF8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC6FF8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:OutgoingCRUDCode) &gt; 0">
																								<xsl:for-each select="n1:OutgoingCRUDCode">
																									<xsl:variable name="value-of-template_0AEC75F8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0AEC75F8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0AEC75F8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0AEC75F8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:OutgoingCRUDCode">
																							<xsl:variable name="value-of-template_0AEC7C18">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC7C18),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC7C18"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC7C18"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:OutgoingCRUDCode">
																							<xsl:variable name="value-of-template_0AEC8008">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC8008),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC8008"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC8008"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:OutgoingCRUDCode">
																							<xsl:variable name="value-of-template_0AEC83F8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC83F8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC83F8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC83F8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:OutgoingDFDName">
																							<xsl:variable name="value-of-template_0AEC8E30">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0AEC8E30),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0AEC8E30"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0AEC8E30"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:OutgoingDFDName) &gt; 0">
																								<xsl:for-each select="n1:OutgoingDFDName">
																									<xsl:variable name="value-of-template_08499428">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08499428),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08499428"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08499428"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:OutgoingDFDName">
																							<xsl:variable name="value-of-template_08499A30">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08499A30),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08499A30"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08499A30"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:OutgoingDFDName">
																							<xsl:variable name="value-of-template_08499E20">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08499E20),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08499E20"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08499E20"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:OutgoingDFDName">
																							<xsl:variable name="value-of-template_0849A210">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0849A210),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0849A210"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0849A210"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
