<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2011 rel. 3 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:n1="osdm_at" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link n1 sps xbrldi xbrli xlink xs xsd xsi">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-242238344-even" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-242238344-odd" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-242238344-even-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-242238344-odd-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-242238344-even-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-242238344-odd-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-242238344">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-242238344-even-first" odd-or-even="even" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-242238344-odd-first" odd-or-even="odd" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-242238344-even-last" odd-or-even="even" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-242238344-odd-last" odd-or-even="odd" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-242238344-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-242238344-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
			<fo:simple-page-master master-name="page-master-229563704-even" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-229563704-odd" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-229563704-even-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-229563704-odd-first" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-229563704-even-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-229563704-odd-last" margin-left="2cm" margin-right="2cm" page-height="21cm" page-width="29.70cm" margin-top="0.7cm" margin-bottom="0.7cm">
				<fo:region-body margin-top="1.30cm" margin-bottom="1.30cm" column-count="1"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="1.30cm"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-229563704">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-229563704-even-first" odd-or-even="even" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-229563704-odd-first" odd-or-even="odd" page-position="first"/>
					<fo:conditional-page-master-reference master-reference="page-master-229563704-even-last" odd-or-even="even" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-229563704-odd-last" odd-or-even="odd" page-position="last"/>
					<fo:conditional-page-master-reference master-reference="page-master-229563704-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-229563704-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:declarations>
				<x:xmpmeta xmlns:x="adobe:ns:meta/">
					<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
						<rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
							<xmp:CreatorTool>Altova StyleVision Enterprise Edition 2011 rel. 3 sp1 (http://www.altova.com)</xmp:CreatorTool>
						</rdf:Description>
					</rdf:RDF>
				</x:xmpmeta>
			</fo:declarations>
			<fo:bookmark-tree>
				<xsl:for-each select="$XML">
					<xsl:for-each select="n1:root">
						<xsl:for-each select="n1:TablesCollection">
							<xsl:for-each select="n1:TableDetails">
								<xsl:for-each select="n1:TableName">
									<fo:bookmark>
										<xsl:choose>
											<xsl:when test="starts-with(string(concat(&apos;#&apos;,.)),'#')">
												<xsl:attribute name="internal-destination">
													<xsl:value-of select="substring(string(concat(&apos;#&apos;,.)),2)"/>
												</xsl:attribute>
											</xsl:when>
											<xsl:otherwise>
												<xsl:message terminate="yes">
													<xsl:value-of select="concat('Error: External bookmark destinations (',string(concat(&apos;#&apos;,.)),') are not supported by FOP 0.93/1.0!')"/>
												</xsl:message>
												<xsl:attribute name="external-destination">
													<xsl:value-of select="string(concat(&apos;#&apos;,.))"/>
												</xsl:attribute>
											</xsl:otherwise>
										</xsl:choose>
										<fo:bookmark-title>
											<xsl:variable name="altova:bookmark-title">
												<xsl:variable name="value-of-template_0F46D5F8">
													<xsl:apply-templates/>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="contains(string($value-of-template_0F46D5F8),'&#x200B;')">
														<fo:block font-size="xx-small">
															<xsl:copy-of select="$value-of-template_0F46D5F8"/>
														</fo:block>
													</xsl:when>
													<xsl:otherwise>
														<fo:inline font-size="xx-small">
															<xsl:copy-of select="$value-of-template_0F46D5F8"/>
														</fo:inline>
													</xsl:otherwise>
												</xsl:choose>
											</xsl:variable>
											<xsl:value-of select="string($altova:bookmark-title)"/>
										</fo:bookmark-title>
									</fo:bookmark>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:for-each>
				</xsl:for-each>
			</fo:bookmark-tree>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-242238344" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-footer">
					<fo:block-container height="1.30cm" overflow="hidden" display-align="after">
						<fo:block font-family="Tahoma" font-size="xx-small">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table font-size="xx-small" width="25cm" table-layout="fixed" border-spacing="0">
								<fo:table-column column-width="18cm"/>
								<fo:table-column column-width="7cm"/>
								<xsl:variable name="altova:CurrContextGrid_0F52DC80" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="left">
													<fo:inline>
														<xsl:text>Oracle Data Modeler</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="right">
													<fo:inline>
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number/>
													<fo:inline>
														<xsl:text> / </xsl:text>
													</fo:inline>
													<fo:page-number-citation ref-id="SV_RefID_PageTotal"/>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer">
					<fo:block-container height="1.30cm" overflow="hidden" display-align="after">
						<fo:block font-family="Tahoma" font-size="xx-small">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table font-size="xx-small" width="25cm" table-layout="fixed" border-spacing="0">
								<fo:table-column column-width="18cm"/>
								<fo:table-column column-width="7cm"/>
								<xsl:variable name="altova:CurrContextGrid_0F52DC80" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="left">
													<fo:inline>
														<xsl:text>Oracle Data Modeler</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell padding="3" display-align="center">
												<fo:block text-align="right">
													<fo:inline>
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number/>
													<fo:inline>
														<xsl:text> / </xsl:text>
													</fo:inline>
													<fo:page-number-citation ref-id="SV_RefID_PageTotal"/>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block font-family="Tahoma" font-size="xx-small" empty-cells="show" text-align="left" display-align="before">
						<fo:inline-container>
							<fo:block>
								<xsl:text>&#x200B;</xsl:text>
							</fo:block>
						</fo:inline-container>
						<fo:block text-align="center" space-before="0" space-after="0" margin="0pt">
							<fo:inline font-size="medium" font-weight="bold">
								<xsl:text>All Tables Details</xsl:text>
							</fo:inline>
						</fo:block>
						<fo:block>
							<fo:leader leader-pattern="space"/>
						</fo:block>
						<xsl:for-each select="$XML">
							<xsl:for-each select="n1:root">
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table width="20cm" table-layout="fixed" border-spacing="0">
									<fo:table-column column-width="4cm"/>
									<fo:table-column column-width="16cm"/>
									<xsl:variable name="altova:CurrContextGrid_0DB25740" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Design Name</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_0DAEF9D8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0DAEF9D8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0DAEF9D8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0DAEF9D8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="string-length(n1:DesignName) &gt; 0">
																		<xsl:for-each select="n1:DesignName">
																			<xsl:variable name="value-of-template_0DAF2C00">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0DAF2C00),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0DAF2C00"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0DAF2C00"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_0F44F9B0">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F44F9B0),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F44F9B0"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F44F9B0"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_0F44FF18">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F44FF18),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F44FF18"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F44FF18"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:DesignName">
																	<xsl:variable name="value-of-template_0F4502A8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F4502A8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F4502A8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F4502A8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Version Date</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_0F42BCD0">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F42BCD0),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F42BCD0"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F42BCD0"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="string-length(n1:VersionDate) &gt; 0">
																		<xsl:for-each select="n1:VersionDate">
																			<xsl:variable name="value-of-template_0E7034D0">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0E7034D0),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0E7034D0"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0E7034D0"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_0DA6E988">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0DA6E988),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0DA6E988"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0DA6E988"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_0F5110F8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F5110F8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F5110F8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F5110F8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:VersionDate">
																	<xsl:variable name="value-of-template_0FB748B8">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0FB748B8),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0FB748B8"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0FB748B8"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Version Comment</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:VersionComment">
																	<xsl:for-each select="n1:VersionCommentDetails">
																		<xsl:for-each select="n1:VersionCommentRow">
																			<xsl:variable name="value-of-template_0C642D88">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0C642D88),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0C642D88"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0C642D88"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																			<fo:block/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="count(n1:VersionComment) &gt; 0">
																		<xsl:for-each select="n1:VersionComment">
																			<xsl:for-each select="n1:VersionCommentDetails">
																				<xsl:for-each select="n1:VersionCommentRow">
																					<xsl:variable name="value-of-template_0E6FED88">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0E6FED88),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0E6FED88"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0E6FED88"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																					<fo:block/>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:choose>
																	<xsl:when test="count(n1:VersionComment/n1:VersionCommentDetails/n1:VersionCommentRow) &gt; 0">
																		<xsl:for-each select="n1:VersionComment">
																			<xsl:for-each select="n1:VersionCommentDetails">
																				<xsl:for-each select="n1:VersionCommentRow">
																					<xsl:variable name="value-of-template_0804D588">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0804D588),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0804D588"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0804D588"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																					<fo:block/>
																				</xsl:for-each>
																			</xsl:for-each>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise/>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:VersionComment">
																	<xsl:for-each select="n1:VersionCommentDetails">
																		<xsl:for-each select="n1:VersionCommentRow">
																			<xsl:variable name="value-of-template_0F44DA00">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0F44DA00),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0F44DA00"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0F44DA00"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																			<fo:block/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:VersionComment">
																	<xsl:for-each select="n1:VersionCommentDetails">
																		<xsl:for-each select="n1:VersionCommentRow">
																			<xsl:variable name="value-of-template_0DB0A428">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0DB0A428),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0DB0A428"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0DB0A428"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																			<fo:block/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
													<fo:block text-align="left">
														<fo:inline>
															<xsl:text>Model Name</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
													<fo:block text-align="left">
														<xsl:choose>
															<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_06AB38E0">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_06AB38E0),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_06AB38E0"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_06AB38E0"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																<xsl:choose>
																	<xsl:when test="string-length(n1:ModelName) &gt; 0">
																		<xsl:for-each select="n1:ModelName">
																			<xsl:variable name="value-of-template_0F44FB00">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0F44FB00),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0F44FB00"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0F44FB00"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:text>&#160;</xsl:text>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_0F44AA00">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F44AA00),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F44AA00"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F44AA00"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_0F45B410">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F45B410),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F45B410"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F45B410"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
															<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																<xsl:for-each select="n1:ModelName">
																	<xsl:variable name="value-of-template_0F457520">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template_0F457520),'&#x200B;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template_0F457520"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template_0F457520"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:when>
														</xsl:choose>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
								<xsl:for-each select="n1:TablesCollection">
									<xsl:for-each select="n1:TableDetails">
										<fo:block break-after="page">
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x200B;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table width="15cm" table-layout="fixed" border-spacing="0">
											<fo:table-column column-width="4cm"/>
											<fo:table-column column-width="11cm"/>
											<xsl:variable name="altova:CurrContextGrid_09544678" select="."/>
											<fo:table-body start-indent="0pt">
												<xsl:variable name="altova:tablerows">
													<fo:table-row>
														<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>Table Name</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell background-color="#a5e7ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
															<fo:block text-align="left">
																<fo:inline-container>
																	<fo:block>
																		<xsl:text>&#x200B;</xsl:text>
																	</fo:block>
																</fo:inline-container>
																<fo:block font-size="2em" font-weight="bold" space-before="0.67em" space-after="0.67em" margin="0pt">
																	<fo:block>
																		<xsl:attribute name="id">
																			<xsl:value-of select="n1:TableName"/>
																		</xsl:attribute>
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:TableName) &gt; 0">
																						<xsl:for-each select="n1:TableName">
																							<xsl:variable name="value-of-template_06AAF830">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_06AAF830),'&#x200B;')">
																									<fo:block font-size="xx-small">
																										<xsl:copy-of select="$value-of-template_06AAF830"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline font-size="xx-small">
																										<xsl:copy-of select="$value-of-template_06AAF830"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:for-each select="n1:TableName">
																					<xsl:variable name="value-of-template_0863CEA8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0863CEA8),'&#x200B;')">
																							<fo:block font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863CEA8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863CEA8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:TableName">
																					<xsl:variable name="value-of-template_0863D210">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0863D210),'&#x200B;')">
																							<fo:block font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863D210"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863D210"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:TableName">
																					<xsl:variable name="value-of-template_0863D5D8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0863D5D8),'&#x200B;')">
																							<fo:block font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863D5D8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863D5D8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:TableName">
																					<xsl:variable name="value-of-template_0863D9F8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0863D9F8),'&#x200B;')">
																							<fo:block font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863D9F8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline font-size="xx-small">
																								<xsl:copy-of select="$value-of-template_0863D9F8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:block>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>Functional Name</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
															<fo:block text-align="left">
																<xsl:choose>
																	<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																		<xsl:for-each select="n1:FunctionalName">
																			<xsl:variable name="value-of-template_0863E4F8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0863E4F8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0863E4F8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0863E4F8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																		<xsl:choose>
																			<xsl:when test="string-length(n1:FunctionalName) &gt; 0">
																				<xsl:for-each select="n1:FunctionalName">
																					<xsl:variable name="value-of-template_0863EB18">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0863EB18),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0863EB18"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0863EB18"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																		<xsl:for-each select="n1:FunctionalName">
																			<xsl:variable name="value-of-template_0863F080">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0863F080),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0863F080"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0863F080"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																		<xsl:for-each select="n1:FunctionalName">
																			<xsl:variable name="value-of-template_0863F410">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0863F410),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0863F410"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0863F410"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																		<xsl:for-each select="n1:FunctionalName">
																			<xsl:variable name="value-of-template_0863F800">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_0863F800),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_0863F800"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_0863F800"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																</xsl:choose>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>Abbreviation</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
															<fo:block text-align="left">
																<xsl:choose>
																	<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																		<xsl:for-each select="n1:Abbreviation">
																			<xsl:variable name="value-of-template_08640390">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_08640390),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_08640390"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_08640390"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																		<xsl:choose>
																			<xsl:when test="string-length(n1:Abbreviation) &gt; 0">
																				<xsl:for-each select="n1:Abbreviation">
																					<xsl:variable name="value-of-template_086409B0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_086409B0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_086409B0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_086409B0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																		<xsl:for-each select="n1:Abbreviation">
																			<xsl:variable name="value-of-template_08640F18">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_08640F18),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_08640F18"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_08640F18"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																		<xsl:for-each select="n1:Abbreviation">
																			<xsl:variable name="value-of-template_086412A8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_086412A8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_086412A8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_086412A8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																		<xsl:for-each select="n1:Abbreviation">
																			<xsl:variable name="value-of-template_08641698">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_08641698),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_08641698"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_08641698"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																</xsl:choose>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>Classification Type Name</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
															<fo:block text-align="left">
																<xsl:choose>
																	<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																		<xsl:for-each select="n1:ClassificationTypeName">
																			<xsl:variable name="value-of-template_08642230">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_08642230),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_08642230"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_08642230"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																		<xsl:choose>
																			<xsl:when test="string-length(n1:ClassificationTypeName) &gt; 0">
																				<xsl:for-each select="n1:ClassificationTypeName">
																					<xsl:variable name="value-of-template_08642850">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_08642850),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_08642850"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_08642850"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																		<xsl:for-each select="n1:ClassificationTypeName">
																			<xsl:variable name="value-of-template_08642D58">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_08642D58),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_08642D58"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_08642D58"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																		<xsl:for-each select="n1:ClassificationTypeName">
																			<xsl:variable name="value-of-template_086430E8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_086430E8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_086430E8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_086430E8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																		<xsl:for-each select="n1:ClassificationTypeName">
																			<xsl:variable name="value-of-template_086434D8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_086434D8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_086434D8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_086434D8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																</xsl:choose>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
															<fo:block text-align="left">
																<fo:inline>
																	<xsl:text>Object Type Name</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" font-size="xx-small" padding="3" display-align="center">
															<fo:block text-align="left">
																<xsl:choose>
																	<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																		<xsl:for-each select="n1:ObjectTypeName">
																			<xsl:variable name="value-of-template_086440C8">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_086440C8),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_086440C8"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_086440C8"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																		<xsl:choose>
																			<xsl:when test="string-length(n1:ObjectTypeName) &gt; 0">
																				<xsl:for-each select="n1:ObjectTypeName">
																					<xsl:variable name="value-of-template_086446E8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_086446E8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_086446E8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_086446E8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:text>&#160;</xsl:text>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																		<xsl:for-each select="n1:ObjectTypeName">
																			<xsl:variable name="value-of-template_08644C50">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_08644C50),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_08644C50"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_08644C50"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																		<xsl:for-each select="n1:ObjectTypeName">
																			<xsl:variable name="value-of-template_08644FE0">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_08644FE0),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_08644FE0"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_08644FE0"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																	<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																		<xsl:for-each select="n1:ObjectTypeName">
																			<xsl:variable name="value-of-template_086453D0">
																				<xsl:apply-templates/>
																			</xsl:variable>
																			<xsl:choose>
																				<xsl:when test="contains(string($value-of-template_086453D0),'&#x200B;')">
																					<fo:block>
																						<xsl:copy-of select="$value-of-template_086453D0"/>
																					</fo:block>
																				</xsl:when>
																				<xsl:otherwise>
																					<fo:inline>
																						<xsl:copy-of select="$value-of-template_086453D0"/>
																					</fo:inline>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:for-each>
																	</xsl:when>
																</xsl:choose>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:variable>
												<xsl:choose>
													<xsl:when test="string($altova:tablerows)">
														<xsl:copy-of select="$altova:tablerows"/>
													</xsl:when>
													<xsl:otherwise>
														<fo:table-row>
															<fo:table-cell>
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</xsl:otherwise>
												</xsl:choose>
											</fo:table-body>
										</fo:table>
										<fo:inline>
											<xsl:text>&#160;</xsl:text>
										</fo:inline>
										<xsl:if test="count( n1:DescriptionNotes )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<xsl:for-each select="n1:DescriptionNotes">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x200B;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table width="20cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="16cm"/>
													<xsl:variable name="altova:CurrContextGrid_09861C30" select="."/>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Description</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:Description">
																					<xsl:for-each select="n1:DescriptionDetails">
																						<xsl:for-each select="n1:DescriptionRow">
																							<xsl:variable name="value-of-template_0985F1C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0985F1C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0985F1C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0985F1C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Description/n1:DescriptionDetails/n1:DescriptionRow) &gt; 0">
																						<xsl:for-each select="n1:Description">
																							<xsl:for-each select="n1:DescriptionDetails">
																								<xsl:for-each select="n1:DescriptionRow">
																									<xsl:variable name="value-of-template_08C0CF48">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08C0CF48),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08C0CF48"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08C0CF48"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Description/n1:DescriptionDetails/n1:DescriptionRow) &gt; 0">
																						<xsl:for-each select="n1:Description">
																							<xsl:for-each select="n1:DescriptionDetails">
																								<xsl:for-each select="n1:DescriptionRow">
																									<xsl:variable name="value-of-template_0F49D4F8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0F49D4F8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0F49D4F8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0F49D4F8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise/>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:Description">
																					<xsl:for-each select="n1:DescriptionDetails">
																						<xsl:for-each select="n1:DescriptionRow">
																							<xsl:variable name="value-of-template_0809C700">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0809C700),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0809C700"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0809C700"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:Description">
																					<xsl:for-each select="n1:DescriptionDetails">
																						<xsl:for-each select="n1:DescriptionRow">
																							<xsl:variable name="value-of-template_09851878">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09851878),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09851878"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09851878"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Notes</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:Notes">
																					<xsl:for-each select="n1:NotesDetails">
																						<xsl:for-each select="n1:NoteRow">
																							<xsl:variable name="value-of-template_09881980">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09881980),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09881980"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09881980"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Notes/n1:NotesDetails/n1:NoteRow) &gt; 0">
																						<xsl:for-each select="n1:Notes">
																							<xsl:for-each select="n1:NotesDetails">
																								<xsl:for-each select="n1:NoteRow">
																									<xsl:variable name="value-of-template_098589D0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_098589D0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_098589D0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_098589D0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:choose>
																					<xsl:when test="count(n1:Notes/n1:NotesDetails/n1:NoteRow) &gt; 0">
																						<xsl:for-each select="n1:Notes">
																							<xsl:for-each select="n1:NotesDetails">
																								<xsl:for-each select="n1:NoteRow">
																									<xsl:variable name="value-of-template_0F49D5E8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0F49D5E8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0F49D5E8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0F49D5E8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise/>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:Notes">
																					<xsl:for-each select="n1:NotesDetails">
																						<xsl:for-each select="n1:NoteRow">
																							<xsl:variable name="value-of-template_09858068">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09858068),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09858068"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09858068"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:Notes">
																					<xsl:for-each select="n1:NotesDetails">
																						<xsl:for-each select="n1:NoteRow">
																							<xsl:variable name="value-of-template_098529D8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_098529D8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_098529D8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_098529D8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																							<fo:block/>
																						</xsl:for-each>
																					</xsl:for-each>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:for-each>
										</xsl:if>
										<fo:inline>
											<xsl:text>&#160;</xsl:text>
										</fo:inline>
										<xsl:if test="count( n1:QuantitativeInfoCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<xsl:for-each select="n1:QuantitativeInfoCollection">
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x200B;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table width="8cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="4cm"/>
													<xsl:variable name="altova:CurrContextGrid_08C2D800" select="."/>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Number Of Columns</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:NumberOfColumns">
																					<xsl:variable name="value-of-template_0A3009E0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0A3009E0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0A3009E0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0A3009E0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:NumberOfColumns) &gt; 0">
																						<xsl:for-each select="n1:NumberOfColumns">
																							<xsl:variable name="value-of-template_09BCB138">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09BCB138),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09BCB138"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09BCB138"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:NumberOfColumns">
																					<xsl:variable name="value-of-template_09B4E128">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09B4E128),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09B4E128"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09B4E128"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:NumberOfColumns">
																					<xsl:variable name="value-of-template_0987ECD8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0987ECD8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0987ECD8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0987ECD8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:NumberOfColumns">
																					<xsl:variable name="value-of-template_092B26F8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_092B26F8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_092B26F8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_092B26F8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Number Of Rows Min.</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_084E0CD8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_084E0CD8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_084E0CD8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_084E0CD8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:NumberOfRowsMin) &gt; 0">
																						<xsl:for-each select="n1:NumberOfRowsMin">
																							<xsl:variable name="value-of-template_09B4AB88">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09B4AB88),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09B4AB88"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09B4AB88"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_095208B0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_095208B0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_095208B0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_095208B0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_097FD7E0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_097FD7E0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_097FD7E0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_097FD7E0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMin">
																					<xsl:variable name="value-of-template_092C0380">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_092C0380),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_092C0380"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_092C0380"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Number Of Rows Max.</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_092BF920">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_092BF920),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_092BF920"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_092BF920"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:NumberOfRowsMax) &gt; 0">
																						<xsl:for-each select="n1:NumberOfRowsMax">
																							<xsl:variable name="value-of-template_0843C948">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0843C948),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0843C948"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0843C948"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_09BCC500">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09BCC500),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09BCC500"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09BCC500"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_09852ED8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09852ED8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09852ED8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09852ED8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:NumberOfRowsMax">
																					<xsl:variable name="value-of-template_084E1AC0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_084E1AC0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_084E1AC0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_084E1AC0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Expected Number Of Rows</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_09BD9DD8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09BD9DD8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09BD9DD8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09BD9DD8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:ExpectedNumberOfRows) &gt; 0">
																						<xsl:for-each select="n1:ExpectedNumberOfRows">
																							<xsl:variable name="value-of-template_09BCB888">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_09BCB888),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_09BCB888"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_09BCB888"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_084E1800">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_084E1800),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_084E1800"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_084E1800"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_09B4AE48">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09B4AE48),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09B4AE48"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09B4AE48"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:ExpectedNumberOfRows">
																					<xsl:variable name="value-of-template_06B7F450">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_06B7F450),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_06B7F450"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_06B7F450"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Expected Growth</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_09B4BFA0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09B4BFA0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09B4BFA0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09B4BFA0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:ExpectedGrowth) &gt; 0">
																						<xsl:for-each select="n1:ExpectedGrowth">
																							<xsl:variable name="value-of-template_084DFB50">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_084DFB50),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_084DFB50"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_084DFB50"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_092BF5D8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_092BF5D8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_092BF5D8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_092BF5D8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_0843D2C0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0843D2C0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0843D2C0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0843D2C0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:ExpectedGrowth">
																					<xsl:variable name="value-of-template_0843CC98">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0843CC98),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0843CC98"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0843CC98"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
															<fo:table-row>
																<fo:table-cell background-color="#d9f5ff" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="left">
																		<fo:inline>
																			<xsl:text>Growth Interval</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="right">
																		<xsl:choose>
																			<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_092B1698">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_092B1698),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_092B1698"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_092B1698"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																				<xsl:choose>
																					<xsl:when test="string-length(n1:GrowthInterval) &gt; 0">
																						<xsl:for-each select="n1:GrowthInterval">
																							<xsl:variable name="value-of-template_092B2A50">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_092B2A50),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_092B2A50"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_092B2A50"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:otherwise>
																						<fo:inline>
																							<xsl:text>&#160;</xsl:text>
																						</fo:inline>
																					</xsl:otherwise>
																				</xsl:choose>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_09BD9AB8">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_09BD9AB8),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_09BD9AB8"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_09BD9AB8"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_0843CB20">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_0843CB20),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_0843CB20"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_0843CB20"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																			<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																				<xsl:for-each select="n1:GrowthInterval">
																					<xsl:variable name="value-of-template_098845D0">
																						<xsl:apply-templates/>
																					</xsl:variable>
																					<xsl:choose>
																						<xsl:when test="contains(string($value-of-template_098845D0),'&#x200B;')">
																							<fo:block>
																								<xsl:copy-of select="$value-of-template_098845D0"/>
																							</fo:block>
																						</xsl:when>
																						<xsl:otherwise>
																							<fo:inline>
																								<xsl:copy-of select="$value-of-template_098845D0"/>
																							</fo:inline>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:for-each>
																			</xsl:when>
																		</xsl:choose>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:for-each>
										</xsl:if>
										<xsl:if test="count( n1:ColumnsCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Columns</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:ColumnsCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="1cm"/>
													<fo:table-column column-width="5cm"/>
													<fo:table-column column-width="0.800cm"/>
													<fo:table-column column-width="0.800cm"/>
													<fo:table-column column-width="0.800cm"/>
													<fo:table-column column-width="4cm"/>
													<fo:table-column column-width="1cm"/>
													<fo:table-column column-width="2.900cm"/>
													<fo:table-column column-width="2.900cm"/>
													<fo:table-column column-width="2.900cm"/>
													<fo:table-column column-width="2.900cm"/>
													<xsl:variable name="altova:CurrContextGrid_08659878" select="."/>
													<fo:table-header background-color="#d9f5ff" text-align="center" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>No</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Column Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>PK</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>FK</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>M</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Data Type</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>DT </xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>kind</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Domain Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Formula</xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>(Default Value)</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Security</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Abbreviation</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:ColumnsCollection">
																<xsl:for-each select="n1:ColumnDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="right">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_08664080">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08664080),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08664080"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08664080"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Sequence) &gt; 0">
																								<xsl:for-each select="n1:Sequence">
																									<xsl:variable name="value-of-template_08664808">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08664808),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08664808"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08664808"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_08664E00">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08664E00),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08664E00"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08664E00"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_08665190">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08665190),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08665190"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08665190"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Sequence">
																							<xsl:variable name="value-of-template_08665580">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08665580),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08665580"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08665580"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ColumnName">
																							<xsl:variable name="value-of-template_08665FB8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08665FB8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08665FB8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08665FB8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:ColumnName) &gt; 0">
																								<xsl:for-each select="n1:ColumnName">
																									<xsl:variable name="value-of-template_086665D8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086665D8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086665D8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086665D8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:ColumnName">
																							<xsl:variable name="value-of-template_08666B40">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08666B40),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08666B40"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08666B40"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ColumnName">
																							<xsl:variable name="value-of-template_08666ED0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08666ED0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08666ED0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08666ED0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ColumnName">
																							<xsl:variable name="value-of-template_086672C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086672C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086672C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086672C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_08667DC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08667DC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08667DC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08667DC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:PK) &gt; 0">
																								<xsl:for-each select="n1:PK">
																									<xsl:variable name="value-of-template_08669400">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08669400),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08669400"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08669400"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_08669908">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08669908),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08669908"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08669908"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_08669CC0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08669CC0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08669CC0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08669CC0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:PK">
																							<xsl:variable name="value-of-template_0866A0D8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866A0D8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866A0D8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866A0D8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_0866AB10">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866AB10),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866AB10"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866AB10"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FK) &gt; 0">
																								<xsl:for-each select="n1:FK">
																									<xsl:variable name="value-of-template_0866B138">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0866B138),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0866B138"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0866B138"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_0866B680">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866B680),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866B680"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866B680"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_0866BA38">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866BA38),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866BA38"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866BA38"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FK">
																							<xsl:variable name="value-of-template_0866BE50">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866BE50),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866BE50"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866BE50"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_0866C8A8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866C8A8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866C8A8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866C8A8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:M) &gt; 0">
																								<xsl:for-each select="n1:M">
																									<xsl:variable name="value-of-template_0866CEC8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0866CEC8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0866CEC8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0866CEC8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_0866D3F8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866D3F8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866D3F8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866D3F8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_0866D7B0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866D7B0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866D7B0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866D7B0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:M">
																							<xsl:variable name="value-of-template_0866DBC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866DBC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866DBC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866DBC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_0866E608">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866E608),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866E608"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866E608"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:DataType) &gt; 0">
																								<xsl:for-each select="n1:DataType">
																									<xsl:variable name="value-of-template_0866EC28">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0866EC28),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0866EC28"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0866EC28"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_0866F190">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866F190),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866F190"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866F190"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_0866F520">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866F520),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866F520"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866F520"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:DataType">
																							<xsl:variable name="value-of-template_0866F910">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0866F910),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0866F910"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0866F910"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_08670470">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08670470),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08670470"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08670470"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:DataTypeKind) &gt; 0">
																								<xsl:for-each select="n1:DataTypeKind">
																									<xsl:variable name="value-of-template_08670A90">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08670A90),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08670A90"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08670A90"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_08670FF8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08670FF8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08670FF8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08670FF8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_08671388">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08671388),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08671388"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08671388"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:DataTypeKind">
																							<xsl:variable name="value-of-template_08671778">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08671778),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08671778"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08671778"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_086721E0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086721E0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086721E0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086721E0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:DomainName) &gt; 0">
																								<xsl:for-each select="n1:DomainName">
																									<xsl:variable name="value-of-template_08672800">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08672800),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08672800"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08672800"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_08672D68">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08672D68),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08672D68"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08672D68"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_086730F8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086730F8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086730F8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086730F8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:DomainName">
																							<xsl:variable name="value-of-template_086734E8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086734E8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086734E8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086734E8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_08673F68">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08673F68),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08673F68"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08673F68"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Formula) &gt; 0">
																								<xsl:for-each select="n1:Formula">
																									<xsl:variable name="value-of-template_08674588">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08674588),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08674588"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08674588"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_08674B40">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08674B40),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08674B40"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08674B40"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_08674EF8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08674EF8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08674EF8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08674EF8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Formula">
																							<xsl:variable name="value-of-template_08675310">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08675310),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08675310"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08675310"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:Security">
																							<xsl:variable name="value-of-template_08675CC0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08675CC0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08675CC0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08675CC0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:Security) &gt; 0">
																								<xsl:for-each select="n1:Security">
																									<xsl:variable name="value-of-template_086762E8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086762E8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086762E8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086762E8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:Security">
																							<xsl:variable name="value-of-template_08676850">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08676850),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08676850"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08676850"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:Security">
																							<xsl:variable name="value-of-template_08676BE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08676BE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08676BE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08676BE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:Security">
																							<xsl:variable name="value-of-template_08676FD0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08676FD0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08676FD0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08676FD0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_08677A40">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08677A40),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08677A40"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08677A40"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:PreferredAbbreviation) &gt; 0">
																								<xsl:for-each select="n1:PreferredAbbreviation">
																									<xsl:variable name="value-of-template_08678068">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08678068),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08678068"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08678068"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_086785E8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086785E8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086785E8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086785E8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_08678978">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08678978),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08678978"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08678978"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:PreferredAbbreviation">
																							<xsl:variable name="value-of-template_08678D68">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08678D68),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08678D68"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08678D68"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:ColumnsCommentsCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Columns Comments</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:ColumnsCommentsCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="1cm"/>
													<fo:table-column column-width="6cm"/>
													<fo:table-column column-width="9cm"/>
													<fo:table-column column-width="9cm"/>
													<xsl:variable name="altova:CurrContextGrid_0865B8A8" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>No</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Column Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Description</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Notes</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:ColumnsCommentsCollection">
																<xsl:for-each select="n1:ColumnCommentsDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="right">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ColumnCommentsSequence">
																							<xsl:variable name="value-of-template_0867CD18">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867CD18),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867CD18"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867CD18"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:ColumnCommentsSequence) &gt; 0">
																								<xsl:for-each select="n1:ColumnCommentsSequence">
																									<xsl:variable name="value-of-template_0867D368">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0867D368),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0867D368"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0867D368"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:ColumnCommentsSequence">
																							<xsl:variable name="value-of-template_0867D978">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867D978),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867D978"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867D978"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ColumnCommentsSequence">
																							<xsl:variable name="value-of-template_0867DD08">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867DD08),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867DD08"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867DD08"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ColumnCommentsSequence">
																							<xsl:variable name="value-of-template_0867E0F8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867E0F8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867E0F8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867E0F8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ColumnCommentsName">
																							<xsl:variable name="value-of-template_0867EA18">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867EA18),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867EA18"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867EA18"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:ColumnCommentsName) &gt; 0">
																								<xsl:for-each select="n1:ColumnCommentsName">
																									<xsl:variable name="value-of-template_0867F038">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0867F038),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0867F038"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0867F038"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:ColumnCommentsName">
																							<xsl:variable name="value-of-template_0867F5B8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867F5B8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867F5B8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867F5B8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ColumnCommentsName">
																							<xsl:variable name="value-of-template_0867F948">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867F948),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867F948"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867F948"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ColumnCommentsName">
																							<xsl:variable name="value-of-template_0867FD38">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0867FD38),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0867FD38"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0867FD38"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ColumnDescription">
																							<xsl:for-each select="n1:ColumnDescriptionDetails">
																								<xsl:for-each select="n1:ColumnDescriptionRow">
																									<xsl:variable name="value-of-template_08680A30">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08680A30),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08680A30"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08680A30"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:ColumnDescription/n1:ColumnDescriptionDetails/n1:ColumnDescriptionRow) &gt; 0">
																								<xsl:for-each select="n1:ColumnDescription">
																									<xsl:for-each select="n1:ColumnDescriptionDetails">
																										<xsl:for-each select="n1:ColumnDescriptionRow">
																											<xsl:variable name="value-of-template_08681558">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_08681558),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_08681558"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_08681558"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:ColumnDescription/n1:ColumnDescriptionDetails/n1:ColumnDescriptionRow) &gt; 0">
																								<xsl:for-each select="n1:ColumnDescription">
																									<xsl:for-each select="n1:ColumnDescriptionDetails">
																										<xsl:for-each select="n1:ColumnDescriptionRow">
																											<xsl:variable name="value-of-template_08682068">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_08682068),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_08682068"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_08682068"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise/>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ColumnDescription">
																							<xsl:for-each select="n1:ColumnDescriptionDetails">
																								<xsl:for-each select="n1:ColumnDescriptionRow">
																									<xsl:variable name="value-of-template_086828D0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086828D0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086828D0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086828D0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ColumnDescription">
																							<xsl:for-each select="n1:ColumnDescriptionDetails">
																								<xsl:for-each select="n1:ColumnDescriptionRow">
																									<xsl:variable name="value-of-template_08682FE8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08682FE8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08682FE8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08682FE8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:ColumnNotes">
																							<xsl:for-each select="n1:ColumnNotesDetails">
																								<xsl:for-each select="n1:ColumnNoteRow">
																									<xsl:variable name="value-of-template_08683D38">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08683D38),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08683D38"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08683D38"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:ColumnNotes/n1:ColumnNotesDetails/n1:ColumnNoteRow) &gt; 0">
																								<xsl:for-each select="n1:ColumnNotes">
																									<xsl:for-each select="n1:ColumnNotesDetails">
																										<xsl:for-each select="n1:ColumnNoteRow">
																											<xsl:variable name="value-of-template_08684700">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_08684700),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_08684700"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_08684700"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:choose>
																							<xsl:when test="count(n1:ColumnNotes/n1:ColumnNotesDetails/n1:ColumnNoteRow) &gt; 0">
																								<xsl:for-each select="n1:ColumnNotes">
																									<xsl:for-each select="n1:ColumnNotesDetails">
																										<xsl:for-each select="n1:ColumnNoteRow">
																											<xsl:variable name="value-of-template_08685208">
																												<xsl:apply-templates/>
																											</xsl:variable>
																											<xsl:choose>
																												<xsl:when test="contains(string($value-of-template_08685208),'&#x200B;')">
																													<fo:block>
																														<xsl:copy-of select="$value-of-template_08685208"/>
																													</fo:block>
																												</xsl:when>
																												<xsl:otherwise>
																													<fo:inline>
																														<xsl:copy-of select="$value-of-template_08685208"/>
																													</fo:inline>
																												</xsl:otherwise>
																											</xsl:choose>
																											<fo:block/>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise/>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:ColumnNotes">
																							<xsl:for-each select="n1:ColumnNotesDetails">
																								<xsl:for-each select="n1:ColumnNoteRow">
																									<xsl:variable name="value-of-template_08685AA8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08685AA8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08685AA8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08685AA8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:ColumnNotes">
																							<xsl:for-each select="n1:ColumnNotesDetails">
																								<xsl:for-each select="n1:ColumnNoteRow">
																									<xsl:variable name="value-of-template_086861C0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086861C0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086861C0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086861C0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																									<fo:block/>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:IndexesCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Indexes</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:IndexesCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="7cm"/>
													<fo:table-column column-width="1.500cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="1.500cm"/>
													<fo:table-column column-width="5.500cm"/>
													<fo:table-column column-width="6cm"/>
													<fo:table-column column-width="1.500cm"/>
													<xsl:variable name="altova:CurrContextGrid_08678ED8" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Index Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>State</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Functional</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Spatial</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Expression</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Column Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" font-weight="bold" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Sort</xsl:text>
																		</fo:inline>
																		<fo:block/>
																		<fo:inline>
																			<xsl:text>Order</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:IndexesCollection">
																<xsl:for-each select="n1:IndexDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IndexName">
																							<xsl:variable name="value-of-template_0868BE88">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868BE88),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868BE88"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868BE88"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IndexName) &gt; 0">
																								<xsl:for-each select="n1:IndexName">
																									<xsl:variable name="value-of-template_0868C4B8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0868C4B8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0868C4B8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0868C4B8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IndexName">
																							<xsl:variable name="value-of-template_0868CA20">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868CA20),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868CA20"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868CA20"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IndexName">
																							<xsl:variable name="value-of-template_0868CDB0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868CDB0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868CDB0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868CDB0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IndexName">
																							<xsl:variable name="value-of-template_0868D1A0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868D1A0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868D1A0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868D1A0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IndexState">
																							<xsl:variable name="value-of-template_0868DCC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868DCC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868DCC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868DCC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IndexState) &gt; 0">
																								<xsl:for-each select="n1:IndexState">
																									<xsl:variable name="value-of-template_0868E2E8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_0868E2E8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_0868E2E8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_0868E2E8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IndexState">
																							<xsl:variable name="value-of-template_0868E850">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868E850),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868E850"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868E850"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IndexState">
																							<xsl:variable name="value-of-template_0868EBE0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868EBE0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868EBE0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868EBE0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IndexState">
																							<xsl:variable name="value-of-template_0868EFD0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868EFD0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868EFD0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868EFD0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IndexFunctional">
																							<xsl:variable name="value-of-template_0868FA08">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_0868FA08),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_0868FA08"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_0868FA08"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IndexFunctional) &gt; 0">
																								<xsl:for-each select="n1:IndexFunctional">
																									<xsl:variable name="value-of-template_08690028">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08690028),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08690028"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08690028"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IndexFunctional">
																							<xsl:variable name="value-of-template_08690590">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08690590),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08690590"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08690590"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IndexFunctional">
																							<xsl:variable name="value-of-template_08690920">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08690920),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08690920"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08690920"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IndexFunctional">
																							<xsl:variable name="value-of-template_08690D10">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08690D10),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08690D10"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08690D10"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IndexSpatial">
																							<xsl:variable name="value-of-template_086917B0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086917B0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086917B0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086917B0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IndexSpatial) &gt; 0">
																								<xsl:for-each select="n1:IndexSpatial">
																									<xsl:variable name="value-of-template_08691DD0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08691DD0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08691DD0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08691DD0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IndexSpatial">
																							<xsl:variable name="value-of-template_08692338">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08692338),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08692338"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08692338"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IndexSpatial">
																							<xsl:variable name="value-of-template_086926C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086926C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086926C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086926C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IndexSpatial">
																							<xsl:variable name="value-of-template_08692AB8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08692AB8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08692AB8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08692AB8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IndexExpression">
																							<xsl:variable name="value-of-template_08693558">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08693558),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08693558"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08693558"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IndexExpression) &gt; 0">
																								<xsl:for-each select="n1:IndexExpression">
																									<xsl:variable name="value-of-template_08693B78">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08693B78),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08693B78"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08693B78"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IndexExpression">
																							<xsl:variable name="value-of-template_086940E0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086940E0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086940E0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086940E0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IndexExpression">
																							<xsl:variable name="value-of-template_08694470">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08694470),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08694470"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08694470"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IndexExpression">
																							<xsl:variable name="value-of-template_08694860">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08694860),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08694860"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08694860"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IndexColumnName">
																							<xsl:variable name="value-of-template_08695320">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08695320),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08695320"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08695320"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IndexColumnName) &gt; 0">
																								<xsl:for-each select="n1:IndexColumnName">
																									<xsl:variable name="value-of-template_08695940">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_08695940),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_08695940"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_08695940"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IndexColumnName">
																							<xsl:variable name="value-of-template_08695EA8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08695EA8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08695EA8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08695EA8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IndexColumnName">
																							<xsl:variable name="value-of-template_08696238">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08696238),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08696238"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08696238"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IndexColumnName">
																							<xsl:variable name="value-of-template_08696628">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08696628),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08696628"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08696628"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:IndexSortOrder">
																							<xsl:variable name="value-of-template_086971B0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086971B0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086971B0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086971B0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:IndexSortOrder) &gt; 0">
																								<xsl:for-each select="n1:IndexSortOrder">
																									<xsl:variable name="value-of-template_086977D0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086977D0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086977D0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086977D0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:IndexSortOrder">
																							<xsl:variable name="value-of-template_08697D38">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_08697D38),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_08697D38"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_08697D38"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:IndexSortOrder">
																							<xsl:variable name="value-of-template_086980C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086980C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086980C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086980C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:IndexSortOrder">
																							<xsl:variable name="value-of-template_086984B8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086984B8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086984B8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086984B8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:ConstraintsCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Constraints</xsl:text>
											</fo:inline>
											<fo:block/>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:ConstraintsCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="3cm"/>
													<fo:table-column column-width="3cm"/>
													<fo:table-column column-width="19cm"/>
													<xsl:variable name="altova:CurrContextGrid_0867BD68" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row text-align="center">
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Type</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Column / Constraint Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Details</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:ConstraintsCollection">
																<xsl:for-each select="n1:TableLevelConstraintsCollection">
																	<xsl:for-each select="n1:TableLevelConstraintDetails">
																		<fo:table-row>
																			<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																				<fo:block text-align="left">
																					<xsl:choose>
																						<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																							<xsl:for-each select="n1:TLConstraintType">
																								<xsl:variable name="value-of-template_0869BDD8">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869BDD8),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869BDD8"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869BDD8"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																							<xsl:choose>
																								<xsl:when test="string-length(n1:TLConstraintType) &gt; 0">
																									<xsl:for-each select="n1:TLConstraintType">
																										<xsl:variable name="value-of-template_0869C4C0">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_0869C4C0),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_0869C4C0"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_0869C4C0"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:text>&#160;</xsl:text>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																							<xsl:for-each select="n1:TLConstraintType">
																								<xsl:variable name="value-of-template_0869CAD0">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869CAD0),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869CAD0"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869CAD0"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																							<xsl:for-each select="n1:TLConstraintType">
																								<xsl:variable name="value-of-template_0869CE60">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869CE60),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869CE60"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869CE60"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																							<xsl:for-each select="n1:TLConstraintType">
																								<xsl:variable name="value-of-template_0869D250">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869D250),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869D250"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869D250"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																				<fo:block text-align="left">
																					<xsl:choose>
																						<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																							<xsl:for-each select="n1:TLConstraintName">
																								<xsl:variable name="value-of-template_0869DD38">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869DD38),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869DD38"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869DD38"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																							<xsl:choose>
																								<xsl:when test="string-length(n1:TLConstraintName) &gt; 0">
																									<xsl:for-each select="n1:TLConstraintName">
																										<xsl:variable name="value-of-template_0869E358">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_0869E358),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_0869E358"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_0869E358"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:text>&#160;</xsl:text>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																							<xsl:for-each select="n1:TLConstraintName">
																								<xsl:variable name="value-of-template_0869E8D8">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869E8D8),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869E8D8"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869E8D8"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																							<xsl:for-each select="n1:TLConstraintName">
																								<xsl:variable name="value-of-template_0869EC68">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869EC68),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869EC68"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869EC68"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																							<xsl:for-each select="n1:TLConstraintName">
																								<xsl:variable name="value-of-template_0869F058">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_0869F058),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_0869F058"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_0869F058"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																				<fo:block text-align="left">
																					<xsl:choose>
																						<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																							<xsl:for-each select="n1:TLConstraintRule">
																								<xsl:for-each select="n1:TLConstraintRuleDetails">
																									<xsl:for-each select="n1:TLConstraintRuleRow">
																										<xsl:variable name="value-of-template_0869FFA8">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_0869FFA8),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_0869FFA8"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_0869FFA8"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																										<fo:block/>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																							<xsl:choose>
																								<xsl:when test="count(n1:TLConstraintRule/n1:TLConstraintRuleDetails/n1:TLConstraintRuleRow) &gt; 0">
																									<xsl:for-each select="n1:TLConstraintRule">
																										<xsl:for-each select="n1:TLConstraintRuleDetails">
																											<xsl:for-each select="n1:TLConstraintRuleRow">
																												<xsl:variable name="value-of-template_086A0A88">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_086A0A88),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_086A0A88"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_086A0A88"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																												<fo:block/>
																											</xsl:for-each>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:text>&#160;</xsl:text>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																							<xsl:choose>
																								<xsl:when test="count(n1:TLConstraintRule/n1:TLConstraintRuleDetails/n1:TLConstraintRuleRow) &gt; 0">
																									<xsl:for-each select="n1:TLConstraintRule">
																										<xsl:for-each select="n1:TLConstraintRuleDetails">
																											<xsl:for-each select="n1:TLConstraintRuleRow">
																												<xsl:variable name="value-of-template_086A1598">
																													<xsl:apply-templates/>
																												</xsl:variable>
																												<xsl:choose>
																													<xsl:when test="contains(string($value-of-template_086A1598),'&#x200B;')">
																														<fo:block>
																															<xsl:copy-of select="$value-of-template_086A1598"/>
																														</fo:block>
																													</xsl:when>
																													<xsl:otherwise>
																														<fo:inline>
																															<xsl:copy-of select="$value-of-template_086A1598"/>
																														</fo:inline>
																													</xsl:otherwise>
																												</xsl:choose>
																												<fo:block/>
																											</xsl:for-each>
																										</xsl:for-each>
																									</xsl:for-each>
																								</xsl:when>
																								<xsl:otherwise/>
																							</xsl:choose>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																							<xsl:for-each select="n1:TLConstraintRule">
																								<xsl:for-each select="n1:TLConstraintRuleDetails">
																									<xsl:for-each select="n1:TLConstraintRuleRow">
																										<xsl:variable name="value-of-template_086A1E00">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_086A1E00),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_086A1E00"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_086A1E00"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																										<fo:block/>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																							<xsl:for-each select="n1:TLConstraintRule">
																								<xsl:for-each select="n1:TLConstraintRuleDetails">
																									<xsl:for-each select="n1:TLConstraintRuleRow">
																										<xsl:variable name="value-of-template_086AB528">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_086AB528),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_086AB528"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_086AB528"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																										<fo:block/>
																									</xsl:for-each>
																								</xsl:for-each>
																							</xsl:for-each>
																						</xsl:when>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
															<xsl:for-each select="n1:ConstraintsCollection">
																<xsl:for-each select="n1:ColumnLevelConstraintsCollection">
																	<xsl:for-each select="n1:ConstraintDetails">
																		<fo:table-row>
																			<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																				<fo:block text-align="left">
																					<xsl:choose>
																						<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																							<xsl:for-each select="n1:ContstraintType">
																								<xsl:variable name="value-of-template_086AC678">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AC678),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AC678"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AC678"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																							<xsl:choose>
																								<xsl:when test="string-length(n1:ContstraintType) &gt; 0">
																									<xsl:for-each select="n1:ContstraintType">
																										<xsl:variable name="value-of-template_086ACC98">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_086ACC98),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_086ACC98"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_086ACC98"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:text>&#160;</xsl:text>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																							<xsl:for-each select="n1:ContstraintType">
																								<xsl:variable name="value-of-template_086AD200">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AD200),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AD200"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AD200"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																							<xsl:for-each select="n1:ContstraintType">
																								<xsl:variable name="value-of-template_086AD590">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AD590),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AD590"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AD590"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																							<xsl:for-each select="n1:ContstraintType">
																								<xsl:variable name="value-of-template_086AD980">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AD980),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AD980"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AD980"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																				<fo:block text-align="left">
																					<xsl:choose>
																						<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																							<xsl:for-each select="n1:ALCConstraintName">
																								<xsl:variable name="value-of-template_086AE468">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AE468),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AE468"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AE468"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																							<xsl:choose>
																								<xsl:when test="string-length(n1:ALCConstraintName) &gt; 0">
																									<xsl:for-each select="n1:ALCConstraintName">
																										<xsl:variable name="value-of-template_086AEA88">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="contains(string($value-of-template_086AEA88),'&#x200B;')">
																												<fo:block>
																													<xsl:copy-of select="$value-of-template_086AEA88"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template_086AEA88"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:text>&#160;</xsl:text>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																							<xsl:for-each select="n1:ALCConstraintName">
																								<xsl:variable name="value-of-template_086AF008">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AF008),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AF008"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AF008"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																							<xsl:for-each select="n1:ALCConstraintName">
																								<xsl:variable name="value-of-template_086AF398">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AF398),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AF398"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AF398"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																						<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																							<xsl:for-each select="n1:ALCConstraintName">
																								<xsl:variable name="value-of-template_086AF788">
																									<xsl:apply-templates/>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="contains(string($value-of-template_086AF788),'&#x200B;')">
																										<fo:block>
																											<xsl:copy-of select="$value-of-template_086AF788"/>
																										</fo:block>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:inline>
																											<xsl:copy-of select="$value-of-template_086AF788"/>
																										</fo:inline>
																									</xsl:otherwise>
																								</xsl:choose>
																							</xsl:for-each>
																						</xsl:when>
																					</xsl:choose>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																				<fo:block text-align="left">
																					<xsl:if test="count( n1:RangesCollection ) != 0">
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x200B;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<xsl:if test="n1:RangesCollection">
																							<fo:table width="18.5cm" table-layout="fixed" border-spacing="0">
																								<fo:table-column column-width="3cm"/>
																								<fo:table-column column-width="3cm"/>
																								<fo:table-column column-width="12.500cm"/>
																								<xsl:variable name="altova:CurrContextGrid_086B0180" select="."/>
																								<fo:table-header background-color="#d9f5ff" start-indent="0pt">
																									<xsl:variable name="altova:tablerows">
																										<fo:table-row>
																											<fo:table-cell number-columns-spanned="3" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Ranges</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																										<fo:table-row>
																											<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Begin Value</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>End Value</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Description</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="string($altova:tablerows)">
																											<xsl:copy-of select="$altova:tablerows"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:table-row>
																												<fo:table-cell>
																													<fo:block/>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:otherwise>
																									</xsl:choose>
																								</fo:table-header>
																								<fo:table-body start-indent="0pt">
																									<xsl:variable name="altova:tablerows">
																										<xsl:for-each select="n1:RangesCollection">
																											<xsl:for-each select="n1:RangeDetails">
																												<fo:table-row>
																													<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																														<fo:block text-align="right">
																															<xsl:choose>
																																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																	<xsl:for-each select="n1:RangeBeginValue">
																																		<xsl:variable name="value-of-template_086B5008">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B5008),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B5008"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B5008"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																	<xsl:choose>
																																		<xsl:when test="string-length(n1:RangeBeginValue) &gt; 0">
																																			<xsl:for-each select="n1:RangeBeginValue">
																																				<xsl:variable name="value-of-template_086B57C0">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086B57C0),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086B57C0"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086B57C0"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:text>&#160;</xsl:text>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																	<xsl:for-each select="n1:RangeBeginValue">
																																		<xsl:variable name="value-of-template_086B5DB8">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B5DB8),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B5DB8"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B5DB8"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																	<xsl:for-each select="n1:RangeBeginValue">
																																		<xsl:variable name="value-of-template_086B6148">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B6148),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B6148"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B6148"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																	<xsl:for-each select="n1:RangeBeginValue">
																																		<xsl:variable name="value-of-template_086B6538">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B6538),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B6538"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B6538"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																														<fo:block text-align="right">
																															<xsl:choose>
																																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																	<xsl:for-each select="n1:RangeEndValue">
																																		<xsl:variable name="value-of-template_086B70A0">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B70A0),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B70A0"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B70A0"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																	<xsl:choose>
																																		<xsl:when test="string-length(n1:RangeEndValue) &gt; 0">
																																			<xsl:for-each select="n1:RangeEndValue">
																																				<xsl:variable name="value-of-template_086B76C0">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086B76C0),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086B76C0"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086B76C0"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:text>&#160;</xsl:text>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																	<xsl:for-each select="n1:RangeEndValue">
																																		<xsl:variable name="value-of-template_086B7C28">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B7C28),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B7C28"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B7C28"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																	<xsl:for-each select="n1:RangeEndValue">
																																		<xsl:variable name="value-of-template_086B7FB8">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B7FB8),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B7FB8"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B7FB8"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																	<xsl:for-each select="n1:RangeEndValue">
																																		<xsl:variable name="value-of-template_086B83A8">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B83A8),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B83A8"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B83A8"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																														<fo:block text-align="left">
																															<xsl:choose>
																																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																	<xsl:for-each select="n1:RangeShortDescription">
																																		<xsl:variable name="value-of-template_086B8F30">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B8F30),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B8F30"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B8F30"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																	<xsl:choose>
																																		<xsl:when test="string-length(n1:RangeShortDescription) &gt; 0">
																																			<xsl:for-each select="n1:RangeShortDescription">
																																				<xsl:variable name="value-of-template_086B9550">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086B9550),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086B9550"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086B9550"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:text>&#160;</xsl:text>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																	<xsl:for-each select="n1:RangeShortDescription">
																																		<xsl:variable name="value-of-template_086B9AD0">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B9AD0),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B9AD0"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B9AD0"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																	<xsl:for-each select="n1:RangeShortDescription">
																																		<xsl:variable name="value-of-template_086B9E60">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086B9E60),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086B9E60"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086B9E60"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																	<xsl:for-each select="n1:RangeShortDescription">
																																		<xsl:variable name="value-of-template_086BA250">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086BA250),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086BA250"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086BA250"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																												</fo:table-row>
																											</xsl:for-each>
																										</xsl:for-each>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="string($altova:tablerows)">
																											<xsl:copy-of select="$altova:tablerows"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:table-row>
																												<fo:table-cell>
																													<fo:block/>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:otherwise>
																									</xsl:choose>
																								</fo:table-body>
																							</fo:table>
																						</xsl:if>
																					</xsl:if>
																					<xsl:if test="count( n1:ValueListsCollection ) != 0">
																						<fo:block>
																							<fo:leader leader-pattern="space"/>
																						</fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x200B;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<xsl:if test="n1:ValueListsCollection">
																							<fo:table width="18.5cm" table-layout="fixed" border-spacing="0">
																								<fo:table-column column-width="3cm"/>
																								<fo:table-column column-width="15.500cm"/>
																								<xsl:variable name="altova:CurrContextGrid_086B04D8" select="."/>
																								<fo:table-header background-color="#d9f5ff" start-indent="0pt">
																									<xsl:variable name="altova:tablerows">
																										<fo:table-row>
																											<fo:table-cell number-columns-spanned="2" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Value List</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																										<fo:table-row>
																											<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Value</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Description</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="string($altova:tablerows)">
																											<xsl:copy-of select="$altova:tablerows"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:table-row>
																												<fo:table-cell>
																													<fo:block/>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:otherwise>
																									</xsl:choose>
																								</fo:table-header>
																								<fo:table-body start-indent="0pt">
																									<xsl:variable name="altova:tablerows">
																										<xsl:for-each select="n1:ValueListsCollection">
																											<xsl:for-each select="n1:ValueListDetails">
																												<fo:table-row>
																													<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																														<fo:block text-align="left">
																															<xsl:choose>
																																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																	<xsl:for-each select="n1:VLValue">
																																		<xsl:variable name="value-of-template_086BDCE0">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086BDCE0),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086BDCE0"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086BDCE0"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																	<xsl:choose>
																																		<xsl:when test="string-length(n1:VLValue) &gt; 0">
																																			<xsl:for-each select="n1:VLValue">
																																				<xsl:variable name="value-of-template_086BE300">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086BE300),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086BE300"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086BE300"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:text>&#160;</xsl:text>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																	<xsl:for-each select="n1:VLValue">
																																		<xsl:variable name="value-of-template_086BE908">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086BE908),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086BE908"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086BE908"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																	<xsl:for-each select="n1:VLValue">
																																		<xsl:variable name="value-of-template_086BECC0">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086BECC0),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086BECC0"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086BECC0"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																	<xsl:for-each select="n1:VLValue">
																																		<xsl:variable name="value-of-template_086BF0D8">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086BF0D8),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086BF0D8"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086BF0D8"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																														<fo:block text-align="left">
																															<xsl:choose>
																																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																	<xsl:for-each select="n1:VLShortDescription">
																																		<xsl:variable name="value-of-template_086BFB78">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086BFB78),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086BFB78"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086BFB78"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																	<xsl:choose>
																																		<xsl:when test="string-length(n1:VLShortDescription) &gt; 0">
																																			<xsl:for-each select="n1:VLShortDescription">
																																				<xsl:variable name="value-of-template_086C0198">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086C0198),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086C0198"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086C0198"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:text>&#160;</xsl:text>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																	<xsl:for-each select="n1:VLShortDescription">
																																		<xsl:variable name="value-of-template_086C0718">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086C0718),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086C0718"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086C0718"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																	<xsl:for-each select="n1:VLShortDescription">
																																		<xsl:variable name="value-of-template_086C0AA8">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086C0AA8),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086C0AA8"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086C0AA8"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																	<xsl:for-each select="n1:VLShortDescription">
																																		<xsl:variable name="value-of-template_086C0E98">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086C0E98),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086C0E98"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086C0E98"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																												</fo:table-row>
																											</xsl:for-each>
																										</xsl:for-each>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="string($altova:tablerows)">
																											<xsl:copy-of select="$altova:tablerows"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:table-row>
																												<fo:table-cell>
																													<fo:block/>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:otherwise>
																									</xsl:choose>
																								</fo:table-body>
																							</fo:table>
																						</xsl:if>
																					</xsl:if>
																					<xsl:if test="count( n1:CheckConstraintsCollection ) != 0">
																						<fo:block>
																							<fo:leader leader-pattern="space"/>
																						</fo:block>
																						<fo:inline-container>
																							<fo:block>
																								<xsl:text>&#x200B;</xsl:text>
																							</fo:block>
																						</fo:inline-container>
																						<xsl:if test="n1:CheckConstraintsCollection">
																							<fo:table width="18.5cm" table-layout="fixed" border-spacing="0">
																								<fo:table-column column-width="15.500cm"/>
																								<fo:table-column column-width="3cm"/>
																								<xsl:variable name="altova:CurrContextGrid_086B3748" select="."/>
																								<fo:table-header background-color="#d9f5ff" start-indent="0pt">
																									<xsl:variable name="altova:tablerows">
																										<fo:table-row>
																											<fo:table-cell number-columns-spanned="2" border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Check Constraint</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																										<fo:table-row>
																											<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>Text</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																											<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																												<fo:block text-align="center">
																													<fo:inline>
																														<xsl:text>DB Type</xsl:text>
																													</fo:inline>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="string($altova:tablerows)">
																											<xsl:copy-of select="$altova:tablerows"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:table-row>
																												<fo:table-cell>
																													<fo:block/>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:otherwise>
																									</xsl:choose>
																								</fo:table-header>
																								<fo:table-body start-indent="0pt">
																									<xsl:variable name="altova:tablerows">
																										<xsl:for-each select="n1:CheckConstraintsCollection">
																											<xsl:for-each select="n1:CheckConstraintDetails">
																												<fo:table-row>
																													<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																														<fo:block text-align="left">
																															<xsl:choose>
																																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																	<xsl:for-each select="n1:CheckConstraintText">
																																		<xsl:for-each select="n1:CheckConstraintTextDetails">
																																			<xsl:for-each select="n1:CheckConstraintTextRow">
																																				<xsl:variable name="value-of-template_086C4C70">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086C4C70),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086C4C70"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086C4C70"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																				<fo:block/>
																																			</xsl:for-each>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																	<xsl:choose>
																																		<xsl:when test="count(n1:CheckConstraintText/n1:CheckConstraintTextDetails/n1:CheckConstraintTextRow) &gt; 0">
																																			<xsl:for-each select="n1:CheckConstraintText">
																																				<xsl:for-each select="n1:CheckConstraintTextDetails">
																																					<xsl:for-each select="n1:CheckConstraintTextRow">
																																						<xsl:variable name="value-of-template_086C5780">
																																							<xsl:apply-templates/>
																																						</xsl:variable>
																																						<xsl:choose>
																																							<xsl:when test="contains(string($value-of-template_086C5780),'&#x200B;')">
																																								<fo:block>
																																									<xsl:copy-of select="$value-of-template_086C5780"/>
																																								</fo:block>
																																							</xsl:when>
																																							<xsl:otherwise>
																																								<fo:inline>
																																									<xsl:copy-of select="$value-of-template_086C5780"/>
																																								</fo:inline>
																																							</xsl:otherwise>
																																						</xsl:choose>
																																						<fo:block/>
																																					</xsl:for-each>
																																				</xsl:for-each>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:text>&#160;</xsl:text>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																	<xsl:choose>
																																		<xsl:when test="count(n1:CheckConstraintText/n1:CheckConstraintTextDetails/n1:CheckConstraintTextRow) &gt; 0">
																																			<xsl:for-each select="n1:CheckConstraintText">
																																				<xsl:for-each select="n1:CheckConstraintTextDetails">
																																					<xsl:for-each select="n1:CheckConstraintTextRow">
																																						<xsl:variable name="value-of-template_086C6270">
																																							<xsl:apply-templates/>
																																						</xsl:variable>
																																						<xsl:choose>
																																							<xsl:when test="contains(string($value-of-template_086C6270),'&#x200B;')">
																																								<fo:block>
																																									<xsl:copy-of select="$value-of-template_086C6270"/>
																																								</fo:block>
																																							</xsl:when>
																																							<xsl:otherwise>
																																								<fo:inline>
																																									<xsl:copy-of select="$value-of-template_086C6270"/>
																																								</fo:inline>
																																							</xsl:otherwise>
																																						</xsl:choose>
																																						<fo:block/>
																																					</xsl:for-each>
																																				</xsl:for-each>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise/>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																	<xsl:for-each select="n1:CheckConstraintText">
																																		<xsl:for-each select="n1:CheckConstraintTextDetails">
																																			<xsl:for-each select="n1:CheckConstraintTextRow">
																																				<xsl:variable name="value-of-template_086C6AA0">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086C6AA0),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086C6AA0"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086C6AA0"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																				<fo:block/>
																																			</xsl:for-each>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																	<xsl:for-each select="n1:CheckConstraintText">
																																		<xsl:for-each select="n1:CheckConstraintTextDetails">
																																			<xsl:for-each select="n1:CheckConstraintTextRow">
																																				<xsl:variable name="value-of-template_086C71B8">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086C71B8),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086C71B8"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086C71B8"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																				<fo:block/>
																																			</xsl:for-each>
																																		</xsl:for-each>
																																	</xsl:for-each>
																																</xsl:when>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																													<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="before">
																														<fo:block text-align="left">
																															<xsl:choose>
																																<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																																	<xsl:for-each select="n1:DatabaseType">
																																		<xsl:variable name="value-of-template_086C7C00">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086C7C00),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086C7C00"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086C7C00"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																																	<xsl:choose>
																																		<xsl:when test="string-length(n1:DatabaseType) &gt; 0">
																																			<xsl:for-each select="n1:DatabaseType">
																																				<xsl:variable name="value-of-template_086C81C0">
																																					<xsl:apply-templates/>
																																				</xsl:variable>
																																				<xsl:choose>
																																					<xsl:when test="contains(string($value-of-template_086C81C0),'&#x200B;')">
																																						<fo:block>
																																							<xsl:copy-of select="$value-of-template_086C81C0"/>
																																						</fo:block>
																																					</xsl:when>
																																					<xsl:otherwise>
																																						<fo:inline>
																																							<xsl:copy-of select="$value-of-template_086C81C0"/>
																																						</fo:inline>
																																					</xsl:otherwise>
																																				</xsl:choose>
																																			</xsl:for-each>
																																		</xsl:when>
																																		<xsl:otherwise>
																																			<fo:inline>
																																				<xsl:text>&#160;</xsl:text>
																																			</fo:inline>
																																		</xsl:otherwise>
																																	</xsl:choose>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																																	<xsl:for-each select="n1:DatabaseType">
																																		<xsl:variable name="value-of-template_086C8728">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086C8728),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086C8728"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086C8728"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																																	<xsl:for-each select="n1:DatabaseType">
																																		<xsl:variable name="value-of-template_086C8AB8">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086C8AB8),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086C8AB8"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086C8AB8"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																																<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																																	<xsl:for-each select="n1:DatabaseType">
																																		<xsl:variable name="value-of-template_086C8EA8">
																																			<xsl:apply-templates/>
																																		</xsl:variable>
																																		<xsl:choose>
																																			<xsl:when test="contains(string($value-of-template_086C8EA8),'&#x200B;')">
																																				<fo:block>
																																					<xsl:copy-of select="$value-of-template_086C8EA8"/>
																																				</fo:block>
																																			</xsl:when>
																																			<xsl:otherwise>
																																				<fo:inline>
																																					<xsl:copy-of select="$value-of-template_086C8EA8"/>
																																				</fo:inline>
																																			</xsl:otherwise>
																																		</xsl:choose>
																																	</xsl:for-each>
																																</xsl:when>
																															</xsl:choose>
																														</fo:block>
																													</fo:table-cell>
																												</fo:table-row>
																											</xsl:for-each>
																										</xsl:for-each>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="string($altova:tablerows)">
																											<xsl:copy-of select="$altova:tablerows"/>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:table-row>
																												<fo:table-cell>
																													<fo:block/>
																												</fo:table-cell>
																											</fo:table-row>
																										</xsl:otherwise>
																									</xsl:choose>
																								</fo:table-body>
																							</fo:table>
																						</xsl:if>
																					</xsl:if>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:FKRTCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Foreign Keys (referring to)</xsl:text>
											</fo:inline>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:FKRTCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="7cm"/>
													<fo:table-column column-width="6cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="6cm"/>
													<xsl:variable name="altova:CurrContextGrid_08698238" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Refering To</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Mandatory</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Transferable</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>In Arc</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Column Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:FKRTCollection">
																<xsl:for-each select="n1:FKRTDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086CD7A0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086CD7A0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086CD7A0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086CD7A0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKName) &gt; 0">
																								<xsl:for-each select="n1:FKName">
																									<xsl:variable name="value-of-template_086CDDC0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086CDDC0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086CDDC0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086CDDC0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086CE378">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086CE378),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086CE378"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086CE378"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086CE730">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086CE730),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086CE730"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086CE730"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086CEB48">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086CEB48),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086CEB48"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086CEB48"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKReferringTo">
																							<xsl:variable name="value-of-template_086CF4B8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086CF4B8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086CF4B8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086CF4B8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKReferringTo) &gt; 0">
																								<xsl:for-each select="n1:FKReferringTo">
																									<xsl:variable name="value-of-template_086CFAD8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086CFAD8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086CFAD8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086CFAD8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKReferringTo">
																							<xsl:variable name="value-of-template_086D0040">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D0040),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D0040"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D0040"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKReferringTo">
																							<xsl:variable name="value-of-template_086D03D0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D03D0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D03D0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D03D0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKReferringTo">
																							<xsl:variable name="value-of-template_086D07C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D07C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D07C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D07C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086D12C8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D12C8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D12C8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D12C8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKMandatory) &gt; 0">
																								<xsl:for-each select="n1:FKMandatory">
																									<xsl:variable name="value-of-template_086D18E8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086D18E8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086D18E8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086D18E8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086D1E50">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D1E50),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D1E50"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D1E50"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086D21E0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D21E0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D21E0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D21E0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086D25D0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D25D0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D25D0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D25D0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086D30B0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D30B0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D30B0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D30B0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKTransferable) &gt; 0">
																								<xsl:for-each select="n1:FKTransferable">
																									<xsl:variable name="value-of-template_086D36D0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086D36D0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086D36D0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086D36D0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086D3C38">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D3C38),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D3C38"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D3C38"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086D3FC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D3FC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D3FC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D3FC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086D43B8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D43B8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D43B8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D43B8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086D4ED8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D4ED8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D4ED8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D4ED8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKInArc) &gt; 0">
																								<xsl:for-each select="n1:FKInArc">
																									<xsl:variable name="value-of-template_086D54F8">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086D54F8),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086D54F8"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086D54F8"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086D5A88">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D5A88),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D5A88"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D5A88"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086D5E40">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D5E40),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D5E40"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D5E40"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086D6258">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D6258),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D6258"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D6258"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086D6BE8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D6BE8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D6BE8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D6BE8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKColumnName) &gt; 0">
																								<xsl:for-each select="n1:FKColumnName">
																									<xsl:variable name="value-of-template_086D7208">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086D7208),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086D7208"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086D7208"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086D7770">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D7770),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D7770"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D7770"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086D7B00">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D7B00),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D7B00"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D7B00"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086D7EF0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086D7EF0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086D7EF0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086D7EF0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
										<xsl:if test="count( n1:FKRFCollection )">
											<fo:block>
												<fo:leader leader-pattern="space"/>
											</fo:block>
											<fo:inline font-size="xx-small" font-style="italic">
												<xsl:text>Foreign Keys (referred from)</xsl:text>
											</fo:inline>
											<fo:block/>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x200B;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<xsl:if test="n1:FKRFCollection">
												<fo:table width="25cm" table-layout="fixed" border-spacing="0">
													<fo:table-column column-width="7cm"/>
													<fo:table-column column-width="6cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="2cm"/>
													<fo:table-column column-width="6cm"/>
													<xsl:variable name="altova:CurrContextGrid_0869CFD0" select="."/>
													<fo:table-header background-color="#d9f5ff" start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<fo:table-row>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Referred From</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Mandatory</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Transferable</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>In Arc</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
																<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" border-top-color="black" border-top-style="solid" border-top-width="thin" font-size="xx-small" padding="3" display-align="center">
																	<fo:block text-align="center">
																		<fo:inline>
																			<xsl:text>Column Name</xsl:text>
																		</fo:inline>
																	</fo:block>
																</fo:table-cell>
															</fo:table-row>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-header>
													<fo:table-body start-indent="0pt">
														<xsl:variable name="altova:tablerows">
															<xsl:for-each select="n1:FKRFCollection">
																<xsl:for-each select="n1:FKRFDetails">
																	<fo:table-row>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-left-color="black" border-left-style="solid" border-left-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086DCF38">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DCF38),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DCF38"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DCF38"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKName) &gt; 0">
																								<xsl:for-each select="n1:FKName">
																									<xsl:variable name="value-of-template_086DD558">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086DD558),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086DD558"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086DD558"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086DDB10">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DDB10),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DDB10"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DDB10"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086DDEC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DDEC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DDEC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DDEC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKName">
																							<xsl:variable name="value-of-template_086DE2E0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DE2E0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DE2E0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DE2E0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKReferredFrom">
																							<xsl:variable name="value-of-template_086DEC50">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DEC50),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DEC50"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DEC50"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKReferredFrom) &gt; 0">
																								<xsl:for-each select="n1:FKReferredFrom">
																									<xsl:variable name="value-of-template_086DF270">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086DF270),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086DF270"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086DF270"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKReferredFrom">
																							<xsl:variable name="value-of-template_086DF7D8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DF7D8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DF7D8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DF7D8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKReferredFrom">
																							<xsl:variable name="value-of-template_086DFB68">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DFB68),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DFB68"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DFB68"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKReferredFrom">
																							<xsl:variable name="value-of-template_086DFF58">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086DFF58),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086DFF58"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086DFF58"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086E0AC0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E0AC0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E0AC0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E0AC0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKMandatory) &gt; 0">
																								<xsl:for-each select="n1:FKMandatory">
																									<xsl:variable name="value-of-template_086E10E0">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086E10E0),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086E10E0"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086E10E0"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086E1648">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E1648),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E1648"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E1648"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086E19D8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E19D8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E19D8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E19D8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKMandatory">
																							<xsl:variable name="value-of-template_086E1DC8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E1DC8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E1DC8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E1DC8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086E28E8">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E28E8),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E28E8"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E28E8"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKTransferable) &gt; 0">
																								<xsl:for-each select="n1:FKTransferable">
																									<xsl:variable name="value-of-template_086E2F08">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086E2F08),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086E2F08"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086E2F08"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086E3470">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E3470),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E3470"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E3470"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086E3800">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E3800),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E3800"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E3800"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKTransferable">
																							<xsl:variable name="value-of-template_086E3BF0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E3BF0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E3BF0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E3BF0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="center">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086E4710">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E4710),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E4710"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E4710"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKInArc) &gt; 0">
																								<xsl:for-each select="n1:FKInArc">
																									<xsl:variable name="value-of-template_086E4D30">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086E4D30),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086E4D30"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086E4D30"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086E52C0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E52C0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E52C0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E52C0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086E5678">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E5678),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E5678"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E5678"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKInArc">
																							<xsl:variable name="value-of-template_086E5A90">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E5A90),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E5A90"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E5A90"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																		<fo:table-cell border-bottom-color="black" border-bottom-style="solid" border-bottom-width="thin" border-right-color="black" border-right-style="solid" border-right-width="thin" font-size="xx-small" padding="3" display-align="center">
																			<fo:block text-align="left">
																				<xsl:choose>
																					<xsl:when test="$SV_OutputFormat = &apos;Authentic&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086E6428">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E6428),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E6428"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E6428"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;HTML&apos;">
																						<xsl:choose>
																							<xsl:when test="string-length(n1:FKColumnName) &gt; 0">
																								<xsl:for-each select="n1:FKColumnName">
																									<xsl:variable name="value-of-template_086E6A48">
																										<xsl:apply-templates/>
																									</xsl:variable>
																									<xsl:choose>
																										<xsl:when test="contains(string($value-of-template_086E6A48),'&#x200B;')">
																											<fo:block>
																												<xsl:copy-of select="$value-of-template_086E6A48"/>
																											</fo:block>
																										</xsl:when>
																										<xsl:otherwise>
																											<fo:inline>
																												<xsl:copy-of select="$value-of-template_086E6A48"/>
																											</fo:inline>
																										</xsl:otherwise>
																									</xsl:choose>
																								</xsl:for-each>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline>
																									<xsl:text>&#160;</xsl:text>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;RTF&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086E6FB0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E6FB0),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E6FB0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E6FB0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;PDF&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086E7340">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E7340),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E7340"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E7340"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																					<xsl:when test="$SV_OutputFormat = &apos;Word2007&apos;">
																						<xsl:for-each select="n1:FKColumnName">
																							<xsl:variable name="value-of-template_086E7730">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_086E7730),'&#x200B;')">
																									<fo:block>
																										<xsl:copy-of select="$value-of-template_086E7730"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline>
																										<xsl:copy-of select="$value-of-template_086E7730"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:when>
																				</xsl:choose>
																			</fo:block>
																		</fo:table-cell>
																	</fo:table-row>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:variable>
														<xsl:choose>
															<xsl:when test="string($altova:tablerows)">
																<xsl:copy-of select="$altova:tablerows"/>
															</xsl:when>
															<xsl:otherwise>
																<fo:table-row>
																	<fo:table-cell>
																		<fo:block/>
																	</fo:table-cell>
																</fo:table-row>
															</xsl:otherwise>
														</xsl:choose>
													</fo:table-body>
												</fo:table>
											</xsl:if>
										</xsl:if>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="altova:double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="altova:double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
